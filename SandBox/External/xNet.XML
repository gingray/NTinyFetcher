<?xml version="1.0"?>
<doc>
    <assembly>
        <name>xNet</name>
    </assembly>
    <members>
        <member name="T:xNet.Collections.StringDictionary">
            <summary>
            Представляет коллекцию строк. Данный класс наследует от <see cref="T:System.Collections.Generic.Dictionary`2"/>, где ключ и значение представлены в виде строки.
            </summary>
        </member>
        <member name="M:xNet.Collections.StringDictionary.#ctor">
            <summary>
            Инициализирует новый пустой экземпляр класса <see cref="T:xNet.Collections.StringDictionary"/> с начальной емкостью по умолчанию и использующий компаратор по умолчанию, проверяющий на равенство.
            </summary>
        </member>
        <member name="M:xNet.Collections.StringDictionary.#ctor(System.Int32)">
            <summary>
            Инициализирует новый пустой экземпляр класса <see cref="T:xNet.Collections.StringDictionary"/> с заданной начальной емкостью и использующий компаратор по умолчанию, проверяющий на равенство.
            </summary>
            <param name="capacity">Начальное количество элементов, которое может содержать коллекция.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity"/> меньше 0.</exception>
        </member>
        <member name="M:xNet.Collections.StringDictionary.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Инициализирует новый пустой экземпляр класса <see cref="T:xNet.Collections.StringDictionary"/> с начальной емкостью по умолчанию и использующий указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <param name="comparer">Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>, которую следует использовать при сравнении ключей, или <see langword="null"/>, если для данного типа ключа должна использоваться реализация <see cref="T:System.Collections.Generic.EqualityComparer`1"/> по умолчанию.</param>
        </member>
        <member name="M:xNet.Collections.StringDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Collections.StringDictionary"/>, который содержит элементы, скопированные из заданного словаря <see cref="T:System.Collections.Generic.IDictionary`2"/> и использует компаратор по умолчанию, проверяющий на равенство.
            </summary>
            <param name="dictionary">Словарь, элементы которого будут скопированы в новый словарь.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dictionary"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="dictionary"/> содержит один или более повторяющихся ключей.</exception>
        </member>
        <member name="M:xNet.Collections.StringDictionary.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Инициализирует новый пустой экземпляр класса <see cref="T:xNet.Collections.StringDictionary"/> с заданной начальной емкостью и использует заданный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <param name="capacity">Начальное количество элементов, которое может содержать коллекция.</param>
            <param name="comparer">Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>, которую следует использовать при сравнении ключей, или <see langword="null"/>, если для данного типа ключа должна использоваться реализация <see cref="T:System.Collections.Generic.EqualityComparer`1"/> по умолчанию.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity"/> меньше 0.</exception>
        </member>
        <member name="M:xNet.Collections.StringDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Инициализирует новый экземпляр <see cref="T:xNet.Collections.StringDictionary"/>, который содержит элементы, скопированные из заданного словаря <see cref="T:System.Collections.Generic.IDictionary`2"/> и использует заданный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <param name="dictionary">Словарь, элементы которого будут скопированы в новый словарь.</param>
            <param name="comparer">Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>, которую следует использовать при сравнении ключей, или <see langword="null"/>, если для данного типа ключа должна использоваться реализация <see cref="T:System.Collections.Generic.EqualityComparer`1"/> по умолчанию.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dictionary"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="dictionary"/> содержит один или более повторяющихся ключей.</exception>
        </member>
        <member name="T:xNet.Net.DownloadProgressChangedEventArgs">
            <summary>
            Представляет данные для события, сообщающим о прогрессе загрузки данных.
            </summary>
        </member>
        <member name="M:xNet.Net.DownloadProgressChangedEventArgs.#ctor(System.Int32,System.Int64)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.DownloadProgressChangedEventArgs"/>.
            </summary>
            <param name="bytesReceived">Количество полученных байтов.</param>
            <param name="totalBytesToReceive">Общее количество получаемых байтов.</param>
        </member>
        <member name="P:xNet.Net.DownloadProgressChangedEventArgs.BytesReceived">
            <summary>
            Возвращает количество полученных байтов.
            </summary>
        </member>
        <member name="P:xNet.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive">
            <summary>
            Возвращает общее количество получаемых байтов.
            </summary>
            <value>Если общее количество получаемых байтов неизвестно, то значение -1.</value>
        </member>
        <member name="P:xNet.Net.DownloadProgressChangedEventArgs.ProgressPercentage">
            <summary>
            Возвращает процент полученных байтов.
            </summary>
        </member>
        <member name="T:xNet.Net.HttpContent">
            <summary>
            Представляет контент, который отправляется HTTP-серверу.
            </summary>
            <remarks>Вы можете реализовать свой класс на основе этого и передать объект этого класса в качестве параметра методу <see cref="M:xNet.Net.HttpRequest.Raw(xNet.Net.HttpMethod,System.String,xNet.Collections.StringDictionary,System.Object)"/>.</remarks>
        </member>
        <member name="M:xNet.Net.HttpContent.Init(xNet.Net.HttpRequest,System.Action{System.Byte[],System.Int32})">
            <summary>
            Вызывается перед отправкой данных.
            </summary>
            <param name="request">Запрос, который отсылает текущий контент.</param>
            <param name="writeBytesCallback">Метод обратного вызова для записи байтов контента в поток.</param>
        </member>
        <member name="M:xNet.Net.HttpContent.GetType">
            <summary>
            Возвращает MIME-тип контента.
            </summary>
            <returns>MIME-тип контента.</returns>
        </member>
        <member name="M:xNet.Net.HttpContent.GetLength">
            <summary>
            Возвращает длину контента в байтах.
            </summary>
            <returns>Длина контента в байтах.</returns>
        </member>
        <member name="M:xNet.Net.HttpContent.Send">
            <summary>
            Вызывается, когда требуется отправить данные.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpContent.Dispose">
            <summary>
            Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:xNet.Net.HttpContent"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpContent.Dispose(System.Boolean)">
            <summary>
            Освобождает неуправляемые (а при необходимости и управляемые) ресурсы, используемые объектом <see cref="T:xNet.Net.HttpContent"/>.
            </summary>
            <param name="disposing">Значение <see langword="true"/> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false"/> позволяет освободить только неуправляемые ресурсы.</param>
        </member>
        <member name="T:xNet.Net.HttpDataAttribute">
            <summary>
            Отмечает типы, которые представляют параметры запроса.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpDataAttribute.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpDataAttribute"/>.
            </summary>
        </member>
        <member name="T:xNet.Net.HttpDataMemberAttribute">
            <summary>
            Отмечает поля и свойства, которые представляют параметр запроса.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpDataMemberAttribute.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpDataMemberAttribute"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpDataMemberAttribute.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpDataMemberAttribute"/>.
            </summary>
            <param name="name">Имя параметра, указываемое в запросе.</param>
        </member>
        <member name="P:xNet.Net.HttpDataMemberAttribute.Name">
            <summary>
            Возвращает имя параметра, указываемое в запросе.
            </summary>
        </member>
        <member name="T:xNet.Net.UploadProgressChangedEventArgs">
            <summary>
            Представляет данные для события, сообщающим о прогрессе выгрузки данных.
            </summary>
        </member>
        <member name="M:xNet.Net.UploadProgressChangedEventArgs.#ctor(System.Int32,System.Int64)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.UploadProgressChangedEventArgs"/>.
            </summary>
            <param name="bytesSent">Количество отправленных байтов.</param>
            <param name="totalBytesToSend">Общее количество отправляемых байтов.</param>
        </member>
        <member name="P:xNet.Net.UploadProgressChangedEventArgs.BytesSent">
            <summary>
            Возвращает количество отправленных байтов.
            </summary>
        </member>
        <member name="P:xNet.Net.UploadProgressChangedEventArgs.TotalBytesToSend">
            <summary>
            Возвращает общее количество отправляемых байтов.
            </summary>
        </member>
        <member name="P:xNet.Net.UploadProgressChangedEventArgs.ProgressPercentage">
            <summary>
            Возвращает процент отправленных байтов.
            </summary>
        </member>
        <member name="T:xNet.Net.MultipartHttpContent">
            <summary>
            Представляет контент в виде Multipart данных, которые отправляются HTTP-серверу.
            </summary>
        </member>
        <member name="M:xNet.Net.MultipartHttpContent.#ctor(xNet.Net.MultipartDataCollection)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.StreamHttpContent"/>.
            </summary>
            <param name="multipartData">Multipart данные контента.</param>
        </member>
        <member name="M:xNet.Net.MultipartHttpContent.GetType">
            <summary>
            Возвращает MIME-тип контента.
            </summary>
            <returns>MIME-тип контента.</returns>
        </member>
        <member name="M:xNet.Net.MultipartHttpContent.GetLength">
            <summary>
            Возвращает длину контента в байтах.
            </summary>
            <returns>Длина контента в байтах.</returns>
        </member>
        <member name="M:xNet.Net.MultipartHttpContent.Send">
            <summary>
            Вызывается, когда требуется отправить данные.
            </summary>
        </member>
        <member name="T:xNet.Net.StreamHttpContent">
            <summary>
            Представляет контент в виде потока, данные из которого отправляется HTTP-серверу.
            </summary>
        </member>
        <member name="M:xNet.Net.StreamHttpContent.#ctor(System.IO.Stream)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.StreamHttpContent"/>.
            </summary>
            <param name="stream">Поток представляющий данные контента.</param>
        </member>
        <member name="M:xNet.Net.StreamHttpContent.GetType">
            <summary>
            Возвращает MIME-тип контента.
            </summary>
            <returns>MIME-тип контента.</returns>
        </member>
        <member name="M:xNet.Net.StreamHttpContent.GetLength">
            <summary>
            Возвращает длину контента в байтах.
            </summary>
            <returns>Длина контента в байтах.</returns>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
        </member>
        <member name="M:xNet.Net.StreamHttpContent.Send">
            <summary>
            Вызывается, когда требуется отправить данные.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
        </member>
        <member name="M:xNet.Net.StreamHttpContent.Dispose(System.Boolean)">
            <summary>
            Освобождает неуправляемые (а при необходимости и управляемые) ресурсы, используемые объектом <see cref="T:xNet.Net.HttpContent"/>.
            </summary>
            <param name="disposing">Значение <see langword="true"/> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false"/> позволяет освободить только неуправляемые ресурсы.</param>
        </member>
        <member name="T:xNet.Net.StringHttpContent">
            <summary>
            Представляет контент в виде строки, который отправляется HTTP-серверу.
            </summary>
        </member>
        <member name="M:xNet.Net.StringHttpContent.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.StringHttpContent"/>.
            </summary>
            <param name="data">Строка представляющая контент.</param>
        </member>
        <member name="M:xNet.Net.StringHttpContent.GetType">
            <summary>
            Возвращает MIME-тип контента.
            </summary>
            <returns>MIME-тип контента.</returns>
        </member>
        <member name="M:xNet.Net.StringHttpContent.GetLength">
            <summary>
            Возвращает длину контента в байтах.
            </summary>
            <returns>Длина контента в байтах.</returns>
        </member>
        <member name="M:xNet.Net.StringHttpContent.Send">
            <summary>
            Вызывается, когда требуется отправить данные.
            </summary>
        </member>
        <member name="T:xNet.EnumHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с перечислениями.
            </summary>
        </member>
        <member name="M:xNet.EnumHelper.ToString(System.Enum,System.String,xNet.LetterCase)">
            <summary>
            Преобразует перечисление в строку, где строковые значения всех записей соединяются, а между ними устанавливается заданный разделитель. Для перечисления должен быть задан атрибут <see cref="T:System.FlagsAttribute"/>.
            </summary>
            <param name="enum">Преобразумое перечисление.</param>
            <param name="separator">Разделитель между строковыми значениями перечисления.</param>
            <param name="letterCase">Регистр букв, применяемый к строковым значениям перечисления.</param>
            <returns>Строковое представление перечисления.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enum"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="separator"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="separator"/> является пустой строкой.</exception>
        </member>
        <member name="T:xNet.LetterCase">
            <summary>
            Регистр букв.
            </summary>
        </member>
        <member name="F:xNet.LetterCase.None">
            <summary>
            Без изменений.
            </summary>
        </member>
        <member name="F:xNet.LetterCase.Upper">
            <summary>
            Верхний регистр.
            </summary>
        </member>
        <member name="F:xNet.LetterCase.Lower">
            <summary>
            Нижний регистр.
            </summary>
        </member>
        <member name="T:xNet.BitHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с битами.
            </summary>
        </member>
        <member name="M:xNet.BitHelper.InvertBit(System.Int32,System.Int32)">
            <summary>
            Инвертирует заданный бит в числе.
            </summary>
            <param name="number">Число, в котором будет инвертирован бит.</param>
            <param name="bit">Индекс инвертируемого бита.</param>
            <returns>Число с инвертированным битом.</returns>
        </member>
        <member name="M:xNet.BitHelper.InvertBits(System.Int32,System.Int32[])">
            <summary>
            Инвертирует заданные биты в числе.
            </summary>
            <param name="number">Число, в котором будут инвертированы биты.</param>
            <param name="bits">Список индексов битов, которые будут инвертированы.</param>
            <returns>Число с инвертированными битами.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bits"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="M:xNet.BitHelper.GetBit(System.Int32,System.Int32)">
            <summary>
            Возвращает значение заданного бита числа.
            </summary>
            <param name="number">Число, из которого будет взято значение заданного бита.</param>
            <param name="bit">Индекс бита, значение которого будет возвращено.</param>
            <returns>Значение заданного бита числа.</returns>
        </member>
        <member name="M:xNet.BitHelper.SetBit(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Устанавливет значение заданного бита числа.
            </summary>
            <param name="value">Значение устанавливаемого бита.</param>
            <param name="number">Число, в котором будет установлено значение заданного бита.</param>
            <param name="bit">Индекс бита, значение которого будет установлено.</param>
            <returns>Число с заданным битом.</returns>
        </member>
        <member name="M:xNet.BitHelper.SetBits(System.Int32,System.Boolean,System.Int32[])">
            <summary>
            Устанавливет значения заданных битов в числе.
            </summary>
            <param name="value">Значение устанавливаемых битов.</param>
            <param name="number">Число, в котором будет установлено значение заданных битов.</param>
            <param name="bits">Список индексов битов, значение которых будет установлено.</param>
            <returns>Число с заданными битами.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="bits"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="T:xNet.Collections.CollectionsHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с коллекциями.
            </summary>
        </member>
        <member name="M:xNet.Collections.CollectionsHelper.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Проверяет, пустая ли последовательность.
            </summary>
            <typeparam name="T">Тип элементов последовательности <paramref name="source"/>.</typeparam>
            <param name="source">Последовательность, проверяемая на наличие элементов.</param>
            <returns>Значение <see langword="true"/>, если последовательность пуста, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="M:xNet.Collections.CollectionsHelper.ToString``1(System.Collections.Generic.IEnumerable{``0},System.String,xNet.LetterCase)">
            <summary>
            Преобразует последовательность в строку, где строковые значения всех записей соединяются, а между ними устанавливается заданный разделитель.
            </summary>
            <typeparam name="T">Тип элементов последовательности <paramref name="source"/>.</typeparam>
            <param name="source">Преобразуемая последовательность.</param>
            <param name="separator">Разделитель между значениями последовательности.</param>
            <param name="letterCase">Регистр букв, применяемый к значениям последовательности.</param>
            <returns>Строковое представление последовательности.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="separator"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="separator"/> является пустой строкой.</exception>
        </member>
        <member name="T:xNet.IO.DirectoryHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с директориями.
            </summary>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.IsEmpty(System.String)">
            <summary>
            Возвращает значение, указывающее, пустой ли каталог.
            </summary>
            <param name="path">Путь к проверяемому каталогу.</param>
            <returns>Значение <see langword="true"/>, если каталог пустой, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.IO.PathTooLongException">Значение параметра <paramref name="path"/> превышает наибольшую возможную длину, определенную системой. Для операционной системы Windows длина пути не должна превышать 248 знаков.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.IsEmpty(System.IO.DirectoryInfo)">
            <summary>
            Возвращает значение, указывающее, пустой ли каталог.
            </summary>
            <param name="dirInfo">Проверяемый каталог.</param>
            <returns>Значение <see langword="true"/>, если каталог пустой, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dirInfo"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="dirInfo"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.ContainsFile(System.String,System.String)">
            <summary>
            Возвращает значение, указывающее, есть ли в каталоге заданный файл.
            </summary>
            <param name="path">Путь к каталогу, в котором будет вестись поиск.</param>
            <param name="fileName">Имя файла с расширением, используемое для поиска.</param>
            <returns>Значение <see langword="true"/>, если в каталоге есть заданный файл, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="fileName"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="fileName"/> является пустой строкой.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.IO.PathTooLongException">Значение параметра <paramref name="path"/> превышает наибольшую возможную длину, определенную системой. Для операционной системы Windows длина пути не должна превышать 248 знаков.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.ContainsFile(System.IO.DirectoryInfo,System.String)">
            <summary>
            Возвращает значение, указывающее, есть ли в каталоге заданный файл.
            </summary>
            <param name="dirInfo">Каталог, в котором будет вестись поиск.</param>
            <param name="fileName">Имя файла с расширением, используемое для поиска.</param>
            <returns>Значение <see langword="true"/>, если в каталоге есть заданный файл, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dirInfo"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="fileName"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="fileName"/> является пустой строкой.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="dirInfo"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.ContainsDirectory(System.String,System.String)">
            <summary>
            Возвращает значение, указывающее, есть ли в каталоге заданный каталог.
            </summary>
            <param name="path">Путь к каталогу, в котором будет вестись поиск.</param>
            <param name="dirName">Имя каталога, используемое для поиска.</param>
            <returns>Значение <see langword="true"/>, если в каталоге есть заданный каталог, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dirName"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="dirName"/> является пустой строкой.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.IO.PathTooLongException">Значение параметра <paramref name="path"/> превышает наибольшую возможную длину, определенную системой. Для операционной системы Windows длина пути не должна превышать 248 знаков.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.ContainsDirectory(System.IO.DirectoryInfo,System.String)">
            <summary>
            Возвращает значение, указывающее, есть ли в каталоге заданный каталог.
            </summary>
            <param name="dirInfo">Каталог, в котором будет вестись поиск.</param>
            <param name="dirName">Имя каталога, используемое для поиска.</param>
            <returns>Значение <see langword="true"/>, если в каталоге есть заданный каталог, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dirInfo"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dirName"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="dirName"/> является пустой строкой.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="dirInfo"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.Copy(System.String,System.String)">
            <summary>
            Копирует каталог со всем его содержимым в другой каталог.
            </summary>
            <param name="sourceDir">Путь к каталогу, который необходимо скопировать.</param>
            <param name="destinationDir">Путь к конечному каталогу. Если он не существует, то будет создан новый.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sourceDir"/> или <paramref name="destinationDir"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="sourceDir"/> или <paramref name="destinationDir"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="sourceDir"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="destinationDir"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.PathTooLongException">Значение параметра <paramref name="sourceDir"/> или <paramref name="destinationDir"/> превышает наибольшую возможную длину, определенную системой. Для операционной системы Windows длина пути не должна превышать 248 знаков.</exception>
            <exception cref="T:System.IO.PathTooLongException">При копировании образовался слишком длинный путь.</exception>
            <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Каталог, заданный параметром <paramref name="destinationDir"/>, доступен только для чтения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Один из файлов, находящихся в каталоге <paramref name="destinationDir"/>, доступен только для чтения.</exception>
        </member>
        <member name="M:xNet.IO.DirectoryHelper.Copy(System.IO.DirectoryInfo,System.String)">
            <summary>
            Копирует каталог со всем его содержимым в другой каталог.
            </summary>
            <param name="sourceDir">Каталог, который необходимо скопировать.</param>
            <param name="destinationDir">Путь к конечному каталогу. Если он не существует, то будет создан новый.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sourceDir"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="destinationDir"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="destinationDir"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="sourceDir"/> указывает на несуществующий каталог.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="destinationDir"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.PathTooLongException">Значение параметра <paramref name="destinationDir"/> превышает наибольшую возможную длину, определенную системой. Для операционной системы Windows длина пути не должна превышать 248 знаков.</exception>
            <exception cref="T:System.IO.PathTooLongException">При копировании образовался слишком длинный путь.</exception>
            <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Каталог, заданный параметром <paramref name="destinationDir"/>, доступен только для чтения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Один из файлов, находящихся в каталоге <paramref name="destinationDir"/>, доступен только для чтения.</exception>
        </member>
        <member name="T:xNet.Net.HtmlHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с HTML.
            </summary>
        </member>
        <member name="M:xNet.Net.HtmlHelper.ReplaceEntities(System.String)">
            <summary>
            Заменяет в тексте HTML-сущности на представляющие их символы.
            </summary>
            <param name="text">Строка, в которой будет произведена замена.</param>
            <returns>Строка с заменёнными HTML-сущностями.</returns>
            <remarks>Заменяются только следующие мнемоники: quot, amp, lt и gt. И все виды кодов.</remarks>
        </member>
        <member name="T:xNet.Net.MultipartDataElement">
            <summary>
            Представляет элемент Multipart/form данных.
            </summary>
        </member>
        <member name="P:xNet.Net.MultipartDataElement.Name">
            <summary>
            Возвращает или задаёт имя элемента.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.MultipartDataElement.FileName">
            <summary>
            Возвращает или задаёт имя передаваемого файла.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>Если свойство заданно, то элемент передаётся как файл.</remarks>
        </member>
        <member name="P:xNet.Net.MultipartDataElement.ContentType">
            <summary>
            Возвращает или задаёт тип передаваемых данных.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.MultipartDataElement.TextValue">
            <summary>
            Возвращает или задаёт значение элемента в виде текста.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>При установке значения, обнуляются значения свойств <see cref="P:xNet.Net.MultipartDataElement.BytesValue"/> и <see cref="P:xNet.Net.MultipartDataElement.PathToFile"/>.</remarks>
        </member>
        <member name="P:xNet.Net.MultipartDataElement.BytesValue">
            <summary>
            Возвращает или задаёт значение элемента в виде байтов.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>При установке значения, обнуляются значения свойств <see cref="P:xNet.Net.MultipartDataElement.TextValue"/> и <see cref="P:xNet.Net.MultipartDataElement.PathToFile"/>.</remarks>
        </member>
        <member name="P:xNet.Net.MultipartDataElement.PathToFile">
            <summary>
            Возвращает или задаёт путь к файлу, который нужно передать в виде значения элемента.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>Если использовать данное свойство, то файл будет загружаться блоками во время записи в поток. При установке значения, обнуляются значения свойств <see cref="P:xNet.Net.MultipartDataElement.TextValue"/> и <see cref="P:xNet.Net.MultipartDataElement.BytesValue"/>.</remarks>
        </member>
        <member name="T:xNet.Net.NetException">
            <summary>
            Исключение, которое выбрасывается, в случае возникновения ошибки при работе с сетью.
            </summary>
        </member>
        <member name="M:xNet.Net.NetException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.NetException"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.NetException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.NetException"/> заданным сообщением об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
            <param name="innerException">Исключение, вызвавшее текущие исключение, или значение <see langword="null"/>.</param>
        </member>
        <member name="M:xNet.Net.NetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.NetException"/> заданными экземплярами <see cref="T:System.Runtime.Serialization.SerializationInfo"/> и <see cref="T:System.Runtime.Serialization.StreamingContext"/>.
            </summary>
            <param name="serializationInfo">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo"/>, который содержит сведения, требуемые для сериализации нового экземпляра класса <see cref="T:xNet.Net.NetException"/>.</param>
            <param name="streamingContext">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext"/>, содержащий источник сериализованного потока, связанного с новым экземпляром класса <see cref="T:xNet.Net.NetException"/>.</param>
        </member>
        <member name="M:xNet.Net.NetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Заполняет экземпляр <see cref="T:System.Runtime.Serialization.SerializationInfo"/> данными, необходимыми для сериализации исключения <see cref="T:xNet.Net.NetException"/>.
            </summary>
            <param name="serializationInfo">Данные о сериализации, <see cref="T:System.Runtime.Serialization.SerializationInfo"/>, которые должны использоваться.</param>
            <param name="streamingContext">Данные о сериализации, <see cref="T:System.Runtime.Serialization.StreamingContext"/>, которые должны использоваться.</param>
        </member>
        <member name="T:xNet.Net.WinInet">
            <summary>
            Представляет класс для взаимодействия с настройками сети операционной системы Windows.
            </summary>
        </member>
        <member name="M:xNet.Net.WinInet.GetIEProxyEnable">
            <summary>
            Возвращает значение, указывающее, используется ли прокси-сервер в Internet Explorer. Значение берется из реестра.
            </summary>
            <returns>Значение, указывающее, используется ли прокси-сервер в Internet Explorer.</returns>
            <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для чтения раздела реестра.</exception>
            <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:Microsoft.Win32.RegistryKey"/>, для которого вызывается этот метод, закрыт (доступ к закрытым разделам невозможен).</exception>
            <exception cref="T:System.UnauthorizedAccessException">У пользователя отсутствуют необходимые права доступа к реестру.</exception>
            <exception cref="T:System.IO.IOException">Раздел <see cref="T:Microsoft.Win32.RegistryKey"/>, содержащий заданное значение, был помечен для удаления.</exception>
        </member>
        <member name="M:xNet.Net.WinInet.SetIEProxyEnable(System.Boolean)">
            <summary>
            Задаёт значение, указывающее, используется ли прокси-сервер в Internet Explorer. Значение задаётся в реестре.
            </summary>
            <param name="enabled">Указывает, используется ли прокси-сервер в Internet Explorer.</param>
            <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для создания или открытия раздела реестра.</exception>
            <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:Microsoft.Win32.RegistryKey"/>, для которого вызывается этот метод, закрыт (доступ к закрытым разделам невозможен).</exception>
            <exception cref="T:System.UnauthorizedAccessException">Запись в объект <see cref="T:Microsoft.Win32.RegistryKey"/> невозможна, например, он не может быть открыт как раздел, доступный для записи, или у пользователя нет необходимых прав доступа.</exception>
        </member>
        <member name="M:xNet.Net.WinInet.GetIEProxy">
            <summary>
            Возвращает значение прокси-сервера Internet Explorer'а. Значение берется из реестра.
            </summary>
            <returns>Значение прокси-сервера Internet Explorer'а, иначе пустая строка.</returns>
            <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для чтения раздела реестра.</exception>
            <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:Microsoft.Win32.RegistryKey"/>, для которого вызывается этот метод, закрыт (доступ к закрытым разделам невозможен).</exception>
            <exception cref="T:System.UnauthorizedAccessException">У пользователя отсутствуют необходимые права доступа к реестру.</exception>
            <exception cref="T:System.IO.IOException">Раздел <see cref="T:Microsoft.Win32.RegistryKey"/>, содержащий заданное значение, был помечен для удаления.</exception>
        </member>
        <member name="M:xNet.Net.WinInet.SetIEProxy(System.String,System.Int32)">
            <summary>
            Задаёт значение прокси-сервера Internet Explorer'а. Значение задаётся в реестре.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="host"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="host"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="port"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для создания или открытия раздела реестра.</exception>
            <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:Microsoft.Win32.RegistryKey"/>, для которого вызывается этот метод, закрыт (доступ к закрытым разделам невозможен).</exception>
            <exception cref="T:System.UnauthorizedAccessException">Запись в объект <see cref="T:Microsoft.Win32.RegistryKey"/> невозможна, например, он не может быть открыт как раздел, доступный для записи, или у пользователя нет необходимых прав доступа.</exception>
        </member>
        <member name="M:xNet.Net.WinInet.SetIEProxy(System.String)">
            <summary>
            Задаёт значение прокси-сервера Internet Explorer'а. Значение задаётся в реестре.
            </summary>
            <param name="hostAndPort">Хост и порт прокси-сервера, в формате - хост:порт, либо только хост.</param>
            <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для создания или открытия раздела реестра.</exception>
            <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:Microsoft.Win32.RegistryKey"/>, для которого вызывается этот метод, закрыт (доступ к закрытым разделам невозможен).</exception>
            <exception cref="T:System.UnauthorizedAccessException">Запись в объект <see cref="T:Microsoft.Win32.RegistryKey"/> невозможна, например, он не может быть открыт как раздел, доступный для записи, или у пользователя нет необходимых прав доступа.</exception>
        </member>
        <member name="P:xNet.Net.WinInet.InternetConnected">
            <summary>
            Возвращает значение, указывающие, установлено ли подключение к интернету.
            </summary>
        </member>
        <member name="P:xNet.Net.WinInet.InternetThroughModem">
            <summary>
            Возвращает значение, указывающие, установлено ли подключение к интернету через модем.
            </summary>
        </member>
        <member name="P:xNet.Net.WinInet.InternetThroughLan">
            <summary>
            Возвращает значение, указывающие, установлено ли подключение к интернету через локальную сеть.
            </summary>
        </member>
        <member name="P:xNet.Net.WinInet.InternetThroughProxy">
            <summary>
            Возвращает значение, указывающие, установлено ли подключение к интернету через прокси-сервер.
            </summary>
        </member>
        <member name="P:xNet.Net.WinInet.IEProxyEnable">
            <summary>
            Возвращает значение, указывающее, используется ли прокси-сервер в Internet Explorer.
            </summary>
        </member>
        <member name="P:xNet.Net.WinInet.IEProxy">
            <summary>
            Возвращает или задаёт прокси-сервер Internet Explorer'а.
            </summary>
            <value>Если прокси-сервер Internet Explorer'а не задан или ошибочен, то будет возвращён <see langword="null"/>. Если задать <see langword="null"/>, то прокси-сервер Internet Explorer'а будет стёрт.</value>
        </member>
        <member name="T:xNet.Net.HttpMethod">
            <summary>
            HTTP-метод запроса.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpMethod.GET">
            <summary>
            Метод GET.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpMethod.HEAD">
            <summary>
            Метод HEAD.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpMethod.DELETE">
            <summary>
            Метод DELETE.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpMethod.POST">
            <summary>
            Метод POST.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpMethod.PUT">
            <summary>
            Метод PUT.
            </summary>
        </member>
        <member name="T:xNet.Net.IHttpConnect">
            <summary>
            Определяет свойство, используемое для работы с HTTP-протоколом.
            </summary>
            <remarks>Данный интерфейс может пригодиться в случае, если, допустим, класс использует <see cref="T:xNet.Net.HttpRequest"/> для работы с HTTP-протоколом. Так как <see cref="T:xNet.Net.HttpRequest"/> может содержать постоянное соединение и различные настройки, то его нужно будет постоянно передавать через аргументы метода, что не очень удобно. Лучше всего для этого реализовать данный интерфейс и задать <see cref="P:xNet.Net.IHttpConnect.Request"/> один раз через специальное свойство.</remarks>
        </member>
        <member name="P:xNet.Net.IHttpConnect.Request">
            <summary>
            Объект для отправки запросов HTTP-серверу.
            </summary>
        </member>
        <member name="T:xNet.Net.CookieDictionary">
            <summary>
            Представляет коллекцию HTTP-кукиксов.
            </summary>
        </member>
        <member name="M:xNet.Net.CookieDictionary.#ctor(System.Boolean)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.CookieDictionary"/>.
            </summary>
            <param name="isLocked">Указывает, закрыты ли кукисы для редактирования.</param>
        </member>
        <member name="P:xNet.Net.CookieDictionary.IsLocked">
            <summary>
            Возвращает или задает значение, указывающие, закрыты ли кукисы для редактирования
            </summary>
            <value>Значение по умолчанию — <see langword="false"/>.</value>
        </member>
        <member name="T:xNet.Net.MultipartDataCollection">
            <summary>
            Представляет коллекцию Multipart/form данных.
            </summary>
        </member>
        <member name="M:xNet.Net.MultipartDataCollection.AddField(System.String,System.String)">
            <summary>
            Добавляет элемент Multipart/form данных.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента.</param>
        </member>
        <member name="M:xNet.Net.MultipartDataCollection.AddField(System.String,System.Byte[])">
            <summary>
            Добавляет элемент Multipart/form данных.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента.</param>
        </member>
        <member name="M:xNet.Net.MultipartDataCollection.AddFile(System.String,System.String,System.String,System.Byte[])">
            <summary>
            Добавляет элемент Multipart/form данных, представляющий файл.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="fileName">Имя передаваемого файла.</param>
            <param name="contentType">Тип передаваемых данных.</param>
            <param name="value">Значение элемента.</param>
        </member>
        <member name="M:xNet.Net.MultipartDataCollection.AddFile(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Добавляет элемент Multipart/form данных, представляющий файл.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="path">Путь к файлу.</param>
            <param name="doPreLoading">Указывает, нужно ли делать предварительную загрузку файла.</param>
            <param name="contentType">Тип передаваемых данных, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой. Например, для платформ на основе Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Если использовать предварительную загрузку файла, то файл будет сразу загружен в память. Если файл имеет большой размер, либо нет необходимости, чтобы файл находился в памяти, то не используйте предварительную загрузку. В этом случае, файл будет загружаться блоками во время записи в поток.
            
            Если не задать тип передаваемых данных, то он будет определяться по расширению файла. Если тип не удастся определить, то будет использовано значение ‘application/unknown‘.</remarks>
        </member>
        <member name="P:xNet.Net.MultipartDataCollection.BoundaryPrefix">
            <summary>
            Возвращает или задаёт префикс устанавливаемый в 'boundary'.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="T:xNet.Net.HttpProxyClient">
            <summary>
            Представляет клиент для HTTP прокси-сервера.
            </summary>
        </member>
        <member name="T:xNet.Net.ProxyClient">
            <summary>
            Представляет базовую реализацию класса для работы с прокси-сервером.
            </summary>
        </member>
        <member name="M:xNet.Net.ProxyClient.Parse(xNet.Net.ProxyType,System.String)">
            <summary>
            Преобразует строку в экземпляр класса прокси-клиента, унаследованный от <see cref="T:xNet.Net.ProxyClient"/>.
            </summary>
            <param name="proxyType">Тип прокси-сервера.</param>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <returns>Экземпляр класса прокси-клиента, унаследованный от <see cref="T:xNet.Net.ProxyClient"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="proxyAddress"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="proxyAddress"/> является пустой строкой.</exception>
            <exception cref="T:System.FormatException">Формат порта является неправильным.</exception>
            <exception cref="T:System.InvalidOperationException">Получен неподдерживаемый тип прокси-сервера.</exception>
        </member>
        <member name="M:xNet.Net.ProxyClient.TryParse(xNet.Net.ProxyType,System.String,xNet.Net.ProxyClient@)">
            <summary>
            Преобразует строку в экземпляр класса прокси-клиента, унаследованный от <see cref="T:xNet.Net.ProxyClient"/>. Возвращает значение, указывающее, успешно ли выполнено преобразование.
            </summary>
            <param name="proxyType">Тип прокси-сервера.</param>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="result">Если преобразование выполнено успешно, то содержит экземпляр класса прокси-клиента, унаследованный от <see cref="T:xNet.Net.ProxyClient"/>, иначе <see langword="null"/>.</param>
            <returns>Значение <see langword="true"/>, если параметр <paramref name="proxyAddress"/> преобразован успешно, иначе <see langword="false"/>.</returns>
        </member>
        <member name="M:xNet.Net.ProxyClient.CreateConnection(System.String,System.Int32)">
            <summary>
            Создаёт соединение с прокси-сервером.
            </summary>
            <param name="destinationHost">Хост пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <param name="destinationPort">Порт пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <returns>Соединение с прокси-сервером.</returns>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Host"/> равно <see langword="null"/> или имеет нулевую длину.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Port"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Username"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Password"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="destinationHost"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="destinationHost"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="destinationPort"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.ProxyClient.ToString">
            <summary>
            Формирует строку вида - хост:порт, представляющую адрес прокси-сервера.
            </summary>
            <returns>Строка вида - хост:порт, представляющая адрес прокси-сервера.</returns>
        </member>
        <member name="M:xNet.Net.ProxyClient.ToExtendedString">
            <summary>
            Формирует строку вида - хост:порт:имя_пользователя:пароль. Последние два параметра добавляются, если они заданы.
            </summary>
            <returns>Строка вида - хост:порт:имя_пользователя:пароль.</returns>
        </member>
        <member name="M:xNet.Net.ProxyClient.GetHashCode">
            <summary>
            Возвращает хэш-код для этого прокси-клиента.
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком.</returns>
        </member>
        <member name="M:xNet.Net.ProxyClient.Equals(xNet.Net.ProxyClient)">
            <summary>
            Определяет, равны ли два прокси-клиента.
            </summary>
            <param name="proxy">Прокси-клиент для сравнения с данным экземпляром.</param>
            <returns>Значение <see langword="true"/>, если два прокси-клиента равны, иначе значение <see langword="false"/>.</returns>
        </member>
        <member name="M:xNet.Net.ProxyClient.Equals(System.Object)">
            <summary>
            Определяет, равны ли два прокси-клиента.
            </summary>
            <param name="obj">Прокси-клиент для сравнения с данным экземпляром.</param>
            <returns>Значение <see langword="true"/>, если два прокси-клиента равны, иначе значение <see langword="false"/>.</returns>
        </member>
        <member name="P:xNet.Net.ProxyClient.ProxyType">
            <summary>
            Возвращает тип прокси-сервера.
            </summary>
        </member>
        <member name="P:xNet.Net.ProxyClient.Host">
            <summary>
            Возвращает или задаёт хост прокси-сервера.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <exception cref="T:System.ArgumentNullException">Значение параметра равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра является пустой строкой.</exception>
        </member>
        <member name="P:xNet.Net.ProxyClient.Port">
            <summary>
            Возвращает или задаёт порт прокси-сервера.
            </summary>
            <value>Значение по умолчанию — 1.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра меньше 1 или больше 65535.</exception>
        </member>
        <member name="P:xNet.Net.ProxyClient.Username">
            <summary>
            Возвращает или задаёт имя пользователя для авторизации на прокси-сервере.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра имеет длину более 255 символов.</exception>
        </member>
        <member name="P:xNet.Net.ProxyClient.Password">
            <summary>
            Возвращает или задаёт пароль для авторизации на прокси-сервере.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра имеет длину более 255 символов.</exception>
        </member>
        <member name="P:xNet.Net.ProxyClient.ConnectTimeout">
            <summary>
            Возвращает или задаёт время ожидания в миллисекундах при подключении к прокси-серверу.
            </summary>
            <value>Значение по умолчанию - 60.000, что равняется одной минуте.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра меньше 0.</exception>
        </member>
        <member name="P:xNet.Net.ProxyClient.ReadWriteTimeout">
            <summary>
            Возвращает или задает время ожидания в миллисекундах при записи в поток или при чтении из него.
            </summary>
            <value>Значение по умолчанию - 60.000, что равняется одной минуте.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра меньше 0.</exception>
        </member>
        <member name="M:xNet.Net.HttpProxyClient.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpProxyClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/> заданным хостом прокси-сервера, и устанавливает порт равным - 8080.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.HttpProxyClient.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.HttpProxyClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
            <param name="username">Имя пользователя для авторизации на прокси-сервере.</param>
            <param name="password">Пароль для авторизации на прокси-сервере.</param>
        </member>
        <member name="M:xNet.Net.HttpProxyClient.Parse(System.String)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/>.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <returns>Экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="proxyAddress"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="proxyAddress"/> является пустой строкой.</exception>
            <exception cref="T:System.FormatException">Формат порта является неправильным.</exception>
            <exception cref="T:System.InvalidOperationException">Получен неподдерживаемый тип прокси-сервера.</exception>
        </member>
        <member name="M:xNet.Net.HttpProxyClient.TryParse(System.String,xNet.Net.HttpProxyClient@)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/>. Возвращает значение, указывающее, успешно ли выполнено преобразование.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <param name="result">Если преобразование выполнено успешно, то содержит экземпляр класса <see cref="T:xNet.Net.HttpProxyClient"/>, иначе <see langword="null"/>.</param>
            <returns>Значение <see langword="true"/>, если параметр <paramref name="proxyAddress"/> преобразован успешно, иначе <see langword="false"/>.</returns>
        </member>
        <member name="M:xNet.Net.HttpProxyClient.CreateConnection(System.String,System.Int32)">
            <summary>
            Создаёт соединение с прокси-сервером.
            </summary>
            <param name="destinationHost">Хост пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <param name="destinationPort">Порт пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <returns>Соединение с прокси-сервером.</returns>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Host"/> равно <see langword="null"/> или имеет нулевую длину.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Port"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Username"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Password"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="destinationHost"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="destinationHost"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="destinationPort"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если порт пункта назначения неравен 80, то для подключения используется метод 'CONNECT'.</remarks>
        </member>
        <member name="T:xNet.Net.HttpClient">
            <summary>
            Представляет статические класс, предназначенный для работы с HTTP-сервером.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpClient.Get(System.String,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.Get(System.Uri,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.Get(System.String,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.Get(System.Uri,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetText(System.String,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде байтов.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetText(System.Uri,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде байтов.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetText(System.String,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде байтов.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetText(System.Uri,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде байтов.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetBytes(System.String,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращён пустой массив байтов.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetBytes(System.Uri,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращён пустой массив байтов.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetBytes(System.String,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращён пустой массив байтов.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetBytes(System.Uri,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращён пустой массив байтов.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetFile(System.String,System.String,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и сохраняет его в новый файл по указанному пути. Если файл уже существует, то он будет перезаписан.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="path">Путь к файлу, в котором будет сохранено тело сообщения.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой. Например, для платформ на основе Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка ввода-вывода.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetFile(System.Uri,System.String,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и сохраняет его в новый файл по указанному пути. Если файл уже существует, то он будет перезаписан.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="path">Путь к файлу, в котором будет сохранено тело сообщения.</param>
            <param name="reqParams">Параметры запроса, отправляемые HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой. Например, для платформ на основе Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка ввода-вывода.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetFile(System.String,System.String,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и сохраняет его в новый файл по указанному пути. Если файл уже существует, то он будет перезаписан.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="path">Путь к файлу, в котором будет сохранено тело сообщения.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой. Например, для платформ на основе Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка ввода-вывода.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.GetFile(System.Uri,System.String,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет GET-запрос HTTP-серверу. Загружает тело сообщения и сохраняет его в новый файл по указанному пути. Если файл уже существует, то он будет перезаписан.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="path">Путь к файлу, в котором будет сохранено тело сообщения.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой. Например, для платформ на основе Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка ввода-вывода.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.String,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="reqParams">Параметры запроса, отправляемые HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reqParams"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.Uri,xNet.Collections.StringDictionary,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="reqParams">Параметры запроса, отправляемые HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reqParams"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.String,System.String,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBody">Тело сообщения, отправляемое HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBody"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="messageBody"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.Uri,System.String,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBody">Тело сообщения, отправляемое HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBody"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="messageBody"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.String,System.IO.Stream,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBodyStream">Тело сообщения в виде потока данных, отправляемое HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBodyStream"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.
            
            Поток заданный в <paramref name="messageBodyStream"/> освобождается после запроса, либо если произойдёт исключение.</remarks>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.Uri,System.IO.Stream,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос HTTP-серверу. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBodyStream">Тело сообщения в виде потока данных, отправляемое HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBodyStream"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.
            
            Поток заданный в <paramref name="messageBodyStream"/> освобождается после запроса, либо если произойдёт исключение.</remarks>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.String,xNet.Net.MultipartDataCollection,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос с Multipart/form данными. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="multipartData">Multipart/form данные, отправляемые HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="multipartData"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpClient.Post(System.Uri,xNet.Net.MultipartDataCollection,xNet.Net.CookieDictionary,xNet.Net.ProxyClient)">
            <summary>
            Отправляет POST-запрос с Multipart/form данными. Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="multipartData">Multipart/form данные, отправляемые HTTP-серверу.</param>
            <param name="cookies">Кукисы, отправляемые HTTP-серверу, или значение <see langword="null"/>.</param>
            <param name="proxy">Прокси-клиент, используемый для запроса, или значение <see langword="null"/>.</param>
            <returns>Если тело сообщения отсутствует, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="multipartData"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="P:xNet.Net.HttpClient.UseIeProxy">
            <summary>
            Возвращает или задаёт значение, указывающие, нужно ли использовать прокси-клиент Internet Explorer'a, если нет прямого подключения к интернету и не задан прокси-клиент.
            </summary>
            <value>Значение по умолчанию — <see langword="false"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpClient.DisableProxyForLocalAddress">
            <summary>
            Возвращает или задаёт значение, указывающие, нужно ли отключать прокси-клиент для локальных адресов.
            </summary>
            <value>Значение по умолчанию — <see langword="false"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpClient.GlobalProxy">
            <summary>
            Возвращает или задаёт глобальный прокси-клиент.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpClient.GlobalUserAgent">
            <summary>
            Возвращает или задаёт глобальное значение HTTP-заголовка 'User-Agent'.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="T:xNet.Net.HttpException">
            <summary>
            Исключение, которое выбрасывается, в случае возникновения ошибки при работе с HTTP-протоколом.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpException"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpException"/> заданным сообщением об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
            <param name="innerException">Исключение, вызвавшее текущие исключение, или значение <see langword="null"/>.</param>
        </member>
        <member name="M:xNet.Net.HttpException.#ctor(System.String,System.Net.HttpStatusCode,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpException"/> заданным сообщением об ошибке и кодом состояния ответа.
            </summary>
            <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
            <param name="statusCode">Код состояния ответа.</param>
            <param name="innerException">Исключение, вызвавшее текущие исключение, или значение <see langword="null"/>.</param>
        </member>
        <member name="M:xNet.Net.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpException"/> заданными экземплярами <see cref="T:System.Runtime.Serialization.SerializationInfo"/> и <see cref="T:System.Runtime.Serialization.StreamingContext"/>.
            </summary>
            <param name="serializationInfo">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo"/>, который содержит сведения, требуемые для сериализации нового экземпляра класса <see cref="T:xNet.Net.HttpException"/>.</param>
            <param name="streamingContext">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext"/>, содержащий источник сериализованного потока, связанного с новым экземпляром класса <see cref="T:xNet.Net.HttpException"/>.</param>
        </member>
        <member name="M:xNet.Net.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Заполняет экземпляр <see cref="T:System.Runtime.Serialization.SerializationInfo"/> данными, необходимыми для сериализации исключения <see cref="T:xNet.Net.HttpException"/>.
            </summary>
            <param name="serializationInfo">Данные о сериализации, <see cref="T:System.Runtime.Serialization.SerializationInfo"/>, которые должны использоваться.</param>
            <param name="streamingContext">Данные о сериализации, <see cref="T:System.Runtime.Serialization.StreamingContext"/>, которые должны использоваться.</param>
        </member>
        <member name="P:xNet.Net.HttpException.StatusCode">
            <summary>
            Возвращает код состояния ответа.
            </summary>
        </member>
        <member name="T:xNet.Net.HttpRequest">
            <summary>
            Представляет класс, предназначеннный для отправки запросов HTTP-серверу.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpRequest.ProtocolVersion">
            <summary>
            Версия HTTP-протокола, используемая в запросе.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpRequest.SslCertificateValidatorCallback">
            <summary>
            Возвращает или задает метод делегата, вызываемый при проверки сертификата SSL, используемый для проверки подлинности.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="M:xNet.Net.HttpRequest.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.HttpRequest"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpRequest.Get(System.String,xNet.Collections.StringDictionary)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpRequest.Get(System.Uri,xNet.Collections.StringDictionary)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.String)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.Uri)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post``1(System.String,``0)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="data">Параметры запроса, в виде объекта или структуры, отправляемые HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <typeparam name="TData">Тип данных значения, которое представляет параметры запроса. Для данного типа должен быть задан атрибут <see cref="T:xNet.Net.HttpDataAttribute"/>, а для его полей и свойств, которые представляют параметры запроса, должен быть задан атрибут <see cref="T:xNet.Net.HttpDataMemberAttribute"/>.</typeparam>
            <exception cref="T:System.ArgumentException">Для типа <typeparamref name="TData"/> не задан обязательный атрибут <see cref="T:xNet.Net.HttpDataAttribute"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="data"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post``1(System.Uri,``0)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="data">Параметры запроса, в виде объекта или структуры, отправляемые HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <typeparam name="TData">Тип данных значения, которое представляет параметры запроса. Для данного типа должен быть задан атрибут <see cref="T:xNet.Net.HttpDataAttribute"/>, а для его полей и свойств, которые представляют параметры запроса, должен быть задан атрибут <see cref="T:xNet.Net.HttpDataMemberAttribute"/>.</typeparam>
            <exception cref="T:System.ArgumentException">Для типа <typeparamref name="TData"/> не задан обязательный атрибут <see cref="T:xNet.Net.HttpDataAttribute"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="data"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.String,xNet.Collections.StringDictionary)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="reqParams">Параметры запроса, отправляемые HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reqParams"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.Uri,xNet.Collections.StringDictionary)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="reqParams">Параметры запроса, отправляемые HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reqParams"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.String,System.String)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBody">Тело сообщения, отправляемое HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBody"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="messageBody"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.Uri,System.String)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBody">Тело сообщения, отправляемое HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBody"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="messageBody"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.String,System.IO.Stream)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBodyStream">Тело сообщения в виде потока данных, отправляемое HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBodyStream"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.
            
            Поток заданный в <paramref name="messageBodyStream"/> освобождается после запроса, либо если произойдёт исключение.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.Uri,System.IO.Stream)">
            <summary>
            Отправляет POST-запрос HTTP-серверу.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="messageBodyStream">Тело сообщения в виде потока данных, отправляемое HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="messageBodyStream"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
            <remarks>Если значение заголовка 'Content-Type' не задано, то отправляется значение 'Content-Type: application/x-www-form-urlencoded'.
            
            Поток заданный в <paramref name="messageBodyStream"/> освобождается после запроса, либо если произойдёт исключение.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.String,xNet.Net.MultipartDataCollection)">
            <summary>
            Отправляет POST-запрос с Multipart/form данными.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="multipartData">Multipart/form данные, отправляемые HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="multipartData"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpRequest.Post(System.Uri,xNet.Net.MultipartDataCollection)">
            <summary>
            Отправляет POST-запрос с Multipart/form данными.
            </summary>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="multipartData">Multipart/form данные, отправляемые HTTP-серверу.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="multipartData"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpRequest.Raw(xNet.Net.HttpMethod,System.String,xNet.Collections.StringDictionary,System.Object)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="method">HTTP-метод запроса.</param>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="messageBody">Тело сообщения, отправляемое HTTP-серверу, или значение <see langword="null"/>.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> является пустой строкой.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpRequest.Raw(xNet.Net.HttpMethod,System.Uri,xNet.Collections.StringDictionary,System.Object)">
            <summary>
            Отправляет GET-запрос HTTP-серверу.
            </summary>
            <param name="method">HTTP-метод запроса.</param>
            <param name="address">Адрес интернет-ресурса.</param>
            <param name="urlParams">Параметры URL-адреса, или значение <see langword="null"/>.</param>
            <param name="messageBody">Тело сообщения, отправляемое HTTP-серверу, или значение <see langword="null"/>.</param>
            <returns>Объект, предназначенный для приёма ответа от HTTP-сервера.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="address"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="address"/> не является абсолютным URI.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="multipartData"/> равно <see langword="null"/>.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.HttpRequest.AddParam(System.String,System.String)">
            <summary>
            Добавляет временный параметр запроса.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра.</param>
            <remarks>Данный параметр будет стёрт после первого запроса.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.AddUrlParam(System.String,System.String)">
            <summary>
            Добавляет временный параметр URL-адреса.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра.</param>
            <remarks>Данный параметр будет стёрт после первого запроса.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.AddHeader(System.String,System.String)">
            <summary>
            Добавляет временный заголовок запроса.
            </summary>
            <param name="name">Имя заголовка.</param>
            <param name="value">Значение заголовка.</param>
            <remarks>Данный заголовок будет стёрт после первого запроса.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.AddField(System.String,System.String)">
            <summary>
            Добавляет временный элемент Multipart/form данных.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента.</param>
            <remarks>Данный элемент будет стёрт после первого запроса.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.AddField(System.String,System.Byte[])">
            <summary>
            Добавляет временный элемент Multipart/form данных.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента.</param>
            <remarks>Данный элемент будет стёрт после первого запроса.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.AddFile(System.String,System.String,System.String,System.Byte[])">
            <summary>
            Добавляет временный элемент Multipart/form данных, представляющий файл.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="fileName">Имя передаваемого файла.</param>
            <param name="contentType">Тип передаваемых данных.</param>
            <param name="value">Значение элемента.</param>
            <remarks>Данный элемент будет стёрт после первого запроса.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.AddFile(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Добавляет временный элемент Multipart/form данных, представляющий файл.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="path">Путь к файлу.</param>
            <param name="doPreLoading">Указывает, нужно ли делать предварительную загрузку файла.</param>
            <param name="contentType">Тип передаваемых данных, или значение <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой. Например, для платформ на основе Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Данный элемент будет стёрт после первого запроса.
            
            Если использовать предварительную загрузку файла, то файл будет сразу загружен в память. Если файл имеет большой размер, либо нет необходимости, чтобы файл находился в памяти, то не используйте предварительную загрузку. В этом случае, файл будет загружаться блоками во время записи в поток.
            
            Если не задать тип передаваемых данных, то он будет определяться по расширению файла. Если тип не удастся определить, то будет использовано значение ‘application/unknown‘.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Close">
            <summary>
            Закрывает соединение с HTTP-сервером.
            </summary>
            <remarks>Вызов данного метода равносилен вызову метода <see cref="M:xNet.Net.HttpRequest.Dispose"/>.</remarks>
        </member>
        <member name="M:xNet.Net.HttpRequest.Dispose">
            <summary>
            Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:xNet.Net.HttpRequest"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpRequest.ClearAllHeaders">
            <summary>
            Очищает все HTTP-заголовки, кроме тех, которые устанавливаются через специальные свойства.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:xNet.Net.HttpRequest.Dispose(System.Boolean)" -->
        <member name="M:xNet.Net.HttpRequest.OnUploadProgressChanged(xNet.Net.UploadProgressChangedEventArgs)">
            <summary>
            Вызывает событие <see cref="E:xNet.Net.HttpRequest.UploadProgressChanged"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="M:xNet.Net.HttpRequest.OnDownloadProgressChanged(xNet.Net.DownloadProgressChangedEventArgs)">
            <summary>
            Вызывает событие <see cref="E:xNet.Net.HttpRequest.DownloadProgressChanged"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="P:xNet.Net.HttpRequest.UseIeProxy">
            <summary>
            Возвращает или задаёт значение, указывающие, нужно ли использовать прокси-клиент Internet Explorer'a, если нет прямого подключения к интернету и не задан прокси-клиент.
            </summary>
            <value>Значение по умолчанию — <see langword="false"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.DisableProxyForLocalAddress">
            <summary>
            Возвращает или задаёт значение, указывающие, нужно ли отключать прокси-клиент для локальных адресов.
            </summary>
            <value>Значение по умолчанию — <see langword="false"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.GlobalProxy">
            <summary>
            Возвращает или задаёт глобальный прокси-клиент.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.GlobalUserAgent">
            <summary>
            Возвращает или задаёт глобальное значение HTTP-заголовка 'User-Agent'.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="E:xNet.Net.HttpRequest.UploadProgressChanged">
            <summary>
            Возникает каждый раз при продвижении хода выгрузки данных.
            </summary>
        </member>
        <member name="E:xNet.Net.HttpRequest.DownloadProgressChanged">
            <summary>
            Возникает каждый раз при продвижении хода загрузки данных.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpRequest.Address">
            <summary>
            Возвращает URI интернет-ресурса, который фактически отвечает на запрос.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpRequest.Response">
            <summary>
            Возвращает последний ответ от HTTP-сервера, полученный данным экземпляром класса.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.Proxy">
            <summary>
            Возвращает или задает прокси-клиент.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.EnableAutoUrlEncode">
            <summary>
            Возвращает или задает значение, указывающие, нужно ли кодировать параметры POST-запросов.
            </summary>
            <value>Значение по умолчанию — <see langword="true"/>.</value>
            <remarks>Параметры кодируются с помощью метода <see cref="M:System.Uri.EscapeDataString(System.String)"/>.</remarks>
        </member>
        <member name="P:xNet.Net.HttpRequest.AllowAutoRedirect">
            <summary>
            Возвращает или задает значение, указывающие, должен ли запрос следовать ответам переадресации.
            </summary>
            <value>Значение по умолчанию — <see langword="true"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.MaximumAutomaticRedirections">
            <summary>
            Возвращает или задает максимальное количество последовательных переадресаций.
            </summary>
            <value>Значение по умолчанию - 5.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра меньше 1.</exception>
        </member>
        <member name="P:xNet.Net.HttpRequest.ConnectTimeout">
            <summary>
            Возвращает или задаёт время ожидания в миллисекундах при подключении к HTTP-серверу.
            </summary>
            <value>Значение по умолчанию - 60.000, что равняется одной минуте.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра меньше 1.</exception>
        </member>
        <member name="P:xNet.Net.HttpRequest.ReadWriteTimeout">
            <summary>
            Возвращает или задает время ожидания в миллисекундах при записи в поток или при чтении из него.
            </summary>
            <value>Значение по умолчанию - 60.000, что равняется одной минуте.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра меньше 0.</exception>
        </member>
        <member name="P:xNet.Net.HttpRequest.CharacterSet">
            <summary>
            Возвращает или задаёт кодировку, применяемую для преобразования исходящих и входящих данных.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>Если кодировка установлена, то дополнительно отправляется заголовок 'Accept-Charset' с названием этой кодировки. Кодировка ответа определяется автоматически, но, если её не удастся определить, то будет использовано значение данного свойства. Если значение данного свойства не задано, то будет использовано значение <see cref="P:System.Text.Encoding.Default"/>.</remarks>
        </member>
        <member name="P:xNet.Net.HttpRequest.KeepAlive">
            <summary>
            Возвращает или задает значение, указывающее, необходимо ли устанавливать постоянное подключение к интернет-ресурсу.
            </summary>
            <value>Значение по умолчанию - <see langword="true"/>.</value>
            <remarks>Если значение равно <see langword="true"/>, то дополнительно отправляется заголовок 'Connection: Keep-Alive', иначе отправляется заголовок 'Connection: Close'. Если для подключения используется HTTP-прокси, то за место заголовка - 'Connection', устанавливается заголовок - 'Proxy-Connection'.</remarks>
        </member>
        <member name="P:xNet.Net.HttpRequest.EnableEncodingContent">
            <summary>
            Возвращает или задает значение, указывающее, нужно ли кодировать содержимое ответа. Это используется, прежде всего, для сжатия данных.
            </summary>
            <value>Значение по умолчанию - <see langword="true"/>.</value>
            <remarks>Если значение равно <see langword="true"/>, то дополнительно отправляется заголовок 'Accept-Encoding: gzip, deflate'.</remarks>
        </member>
        <member name="P:xNet.Net.HttpRequest.Username">
            <summary>
            Возвращает или задаёт имя пользователя для авторизации на HTTP-сервере.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>Если значение установлено, то дополнительно отправляется заголовок 'Authorization'.</remarks>
        </member>
        <member name="P:xNet.Net.HttpRequest.Password">
            <summary>
            Возвращает или задаёт пароль для авторизации на HTTP-сервере.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>Если значение установлено, то дополнительно отправляется заголовок 'Authorization'.</remarks>
        </member>
        <member name="P:xNet.Net.HttpRequest.Referer">
            <summary>
            Возвращает или задает значение HTTP-заголовка 'Referer'.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.UserAgent">
            <summary>
            Возвращает или задает значение HTTP-заголовка 'User-Agent'.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.ContentType">
            <summary>
            Возвращает или задает значение HTTP-заголовка 'Content-Type'.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpRequest.Cookies">
            <summary>
            Возвращает или задает кукисы, связанные с запросом.
            </summary>
            <value>Значение по умолчанию — <see langword="null"/>.</value>
            <remarks>Кукиксы могут изменяться ответом от HTTP-сервера. Чтобы не допустить этого, нужно установить свойство <see cref="P:xNet.Net.CookieDictionary.IsLocked"/> равным <see langword="true"/>.</remarks>
        </member>
        <member name="P:xNet.Net.HttpRequest.Item(System.String)">
            <summary>
            Возвращает или задаёт значение HTTP-заголовка.
            </summary>
            <param name="headerName">Название заголовка.</param>
            <value>Значение заголовка, если такой заголок задан, иначе пустая строка. Если задать значение <see langword="null"/> или пустую строку, то заголовок будет удалён из списка.</value>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="headerName"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="headerName"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentException">Получение, либо установка значения заголовка, который должен задаваться с помощью специального свойства.</exception>
            <remarks>Список заголовков, которые должны задаваться только с помощью специальных свойств:
            <list type="table">
                <item>
                   <description>Accept-Charset</description>
                </item>
                <item>
                   <description>Accept-Encoding</description>
                </item>
                <item>
                   <description>Authorization</description>
                </item>
                <item>
                   <description>Content-Type</description>
                </item>
                <item>
                   <description>Content-Length</description>
                </item>
                <item>
                   <description>Cookie</description>
                </item>
                <item>
                   <description>Connection</description>
                </item>
                <item>
                   <description>Proxy-Connection</description>
                </item>
                <item>
                   <description>Referer</description>
                </item>
                <item>
                   <description>User-Agent</description>
                </item>
                <item>
                   <description>Host</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="T:xNet.Net.HttpResponse">
            <summary>
            Представляет класс, предназначеннный для приёма ответа от HTTP-сервера.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpResponse.ToBytes">
            <summary>
            Загружает тело сообщения и возвращает его в виде байтов.
            </summary>
            <returns>Если тело сообщения отсутствует, или оно уже было загружено, то будет возвращён пустой массив байтов.</returns>
            <exception cref="T:System.InvalidOperationException">Вызов метода из ошибочного ответа.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
        </member>
        <member name="M:xNet.Net.HttpResponse.ToString">
            <summary>
            Загружает тело сообщения и возвращает его в виде текста.
            </summary>
            <returns>Если тело сообщения отсутствует, или оно уже было загружено, то будет возвращена пустая строка.</returns>
            <exception cref="T:System.InvalidOperationException">Вызов метода из ошибочного ответа.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
        </member>
        <member name="M:xNet.Net.HttpResponse.ToFile(System.String)">
            <summary>
            Загружает тело сообщения и сохраняет его в новый файл по указанному пути. Если файл уже существует, то он будет перезаписан.
            </summary>
            <param name="path">Путь к файлу, в котором будет сохранено тело сообщения.</param>
            <exception cref="T:System.InvalidOperationException">Вызов метода из ошибочного ответа.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой. Например, для платформ на основе Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка ввода-вывода.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
        </member>
        <member name="M:xNet.Net.HttpResponse.None">
            <summary>
            Пропускает тело сообщения. Данный метод следует вызвать, если не требуется тело сообщения.
            </summary>
            <exception cref="T:System.InvalidOperationException">Вызов метода из ошибочного ответа.</exception>
            <exception cref="T:xNet.Net.HttpException">Ошибка при работе с HTTP-протоколом.</exception>
        </member>
        <member name="P:xNet.Net.HttpResponse.HasError">
            <summary>
            Возвращает значение, указывающие, произошла ли ошибка во время получения ответа от HTTP-сервера.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.MessageBodyLoaded">
            <summary>
            Возвращает значение, указывающие, загружено ли тело сообщения.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.IsOK">
            <summary>
            Возвращает значение, указывающие, успешно ли выполнен запрос (код ответа = 200 OK). 
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.HasRedirect">
            <summary>
            Возвращает значение, указывающие, имеется ли переадресация (код ответа = 3xx).
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.Address">
            <summary>
            Возвращает URI интернет-ресурса, который фактически отвечал на запрос.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.Method">
            <summary>
            Возвращает HTTP-метод, используемый для получения ответа.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.ProtocolVersion">
            <summary>
            Возвращает версию HTTP-протокола, используемую в ответе.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.StatusCode">
            <summary>
            Возвращает код состояния ответа.
            </summary>
        </member>
        <member name="P:xNet.Net.HttpResponse.CharacterSet">
            <summary>
            Возвращает кодировку тела сообщения.
            </summary>
            <value>Значение заголовка, если такой заголок задан, иначе значение заданное в <see cref="T:xNet.Net.HttpRequest"/>. Если и оно не задано, то значение <see cref="P:System.Text.Encoding.Default"/>.</value>
        </member>
        <member name="P:xNet.Net.HttpResponse.ContentLength">
            <summary>
            Возвращает длину тела сообщения.
            </summary>
            <value>Значение заголовка, если такой заголок задан, иначе -1.</value>
        </member>
        <member name="P:xNet.Net.HttpResponse.ContentType">
            <summary>
            Возвращает тип содержимого ответа.
            </summary>
            <value>Значение заголовка, если такой заголок задан, иначе пустая строка.</value>
        </member>
        <member name="P:xNet.Net.HttpResponse.Location">
            <summary>
            Возвращает значение HTTP-заголовка 'Location'.
            </summary>
            <returns>Значение заголовка, если такой заголок задан, иначе пустая строка.</returns>
        </member>
        <member name="P:xNet.Net.HttpResponse.Cookies">
            <summary>
            Возвращает кукисы, образовавшиеся в результате запроса, или установленные в <see cref="T:xNet.Net.HttpRequest"/>.
            </summary>
            <remarks>Если кукиксы были установлены в <see cref="T:xNet.Net.HttpRequest"/> и значение свойства <see cref="P:xNet.Net.CookieDictionary.IsLocked"/> равно <see langword="true"/>, то будут созданы новые кукиксы.</remarks>
        </member>
        <member name="P:xNet.Net.HttpResponse.Item(System.String)">
            <summary>
            Возвращает значение HTTP-заголовка.
            </summary>
            <param name="headerName">Название заголовка.</param>
            <returns>Значение заголовка, если такой заголок задан, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="headerName"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="headerName"/> является пустой строкой.</exception>
        </member>
        <member name="T:xNet.Net.HttpHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с HTTP-протоколом.
            </summary>
        </member>
        <member name="F:xNet.Net.HttpHelper.NewLine">
            <summary>
            Обозначает новую строку в HTTP-протоколе.
            </summary>
        </member>
        <member name="M:xNet.Net.HttpHelper.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
            Кодирует строку для надёжной передачи HTTP-серверу.
            </summary>
            <param name="str">Строка, которая будет закодирована.</param>
            <param name="encoding">Кодировка, применяемая для преобразования данных в последовательность байтов. Если значение параметра равно <see langword="null"/>, то будет использовано значение <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <returns>Закодированная строка.</returns>
        </member>
        <member name="M:xNet.Net.HttpHelper.RandomUserAgent">
            <summary>
            Генерирует случайный User-Agent от браузера: IE, Opera, Chrome или Firefox.
            </summary>
            <returns>Случайный User-Agent.</returns>
        </member>
        <member name="M:xNet.Net.HttpHelper.RandomIEUserAgent">
            <summary>
            Генерирует случайный User-Agent от браузера IE.
            </summary>
            <returns>Случайный User-Agent от браузера IE.</returns>
        </member>
        <member name="M:xNet.Net.HttpHelper.RandomOperaUserAgent">
            <summary>
            Генерирует случайный User-Agent от браузера Opera.
            </summary>
            <returns>Случайный User-Agent от браузера Opera.</returns>
        </member>
        <member name="M:xNet.Net.HttpHelper.RandomChromeUserAgent">
            <summary>
            Генерирует случайный User-Agent от браузера Chrome.
            </summary>
            <returns>Случайный User-Agent от браузера Chrome.</returns>
        </member>
        <member name="M:xNet.Net.HttpHelper.RandomFirefoxUserAgent">
            <summary>
            Генерирует случайный User-Agent от браузера Firefox.
            </summary>
            <returns>Случайный User-Agent от браузера Firefox.</returns>
        </member>
        <member name="T:xNet.IO.FileHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с файлами.
            </summary>
        </member>
        <member name="M:xNet.IO.FileHelper.IsEmpty(System.String)">
            <summary>
            Возвращает значение, указывающее, пустой ли файл.
            </summary>
            <param name="path">Путь к проверяемому файлу.</param>
            <returns>Значение <see langword="true"/>, если файл пустой, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.IO.PathTooLongException">Длина указанного пути, имени файла или обоих параметров превышает установленный системой предел. Для операционной системы Windows длина пути не должна превышать 248 знаков, а имена файлов не должны содержать более 260 знаков.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
        </member>
        <member name="M:xNet.IO.FileHelper.IsEmpty(System.IO.FileInfo)">
            <summary>
            Возвращает значение, указывающее, пустой ли файл.
            </summary>
            <param name="fileInfo">Проверяемый файл.</param>
            <returns>Значение <see langword="true"/>, если файл пустой, иначе значение <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="fileInfo"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="fileInfo"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода.</exception>
        </member>
        <member name="M:xNet.IO.FileHelper.ReadData``1(System.String,System.Func{System.String,``0},System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            Открывает текстовый файл, считывает диапазон строк, преобразуя их в заданный тип данных с помощью заданного метода, и закрывает файл.
            </summary>
            <typeparam name="T">Тип данных возвращаемых перечислителем и <paramref name="converter"/>.</typeparam>
            <param name="path">Путь к текстовому файлу.</param>
            <param name="converter">Метод, который будет преобразовывать строки в заданный тип данных. Если метод вернёт <see langword="null"/>, то он не будет возвращён перечислителем.</param>
            <param name="startLine">Позиция строки, с которой начинается считывание. Отсчёт от 1.</param>
            <param name="linesCount">Число строк, которое нужно считать. Если значение равно 0, то будут считаны все строки.</param>
            <param name="encoding">Кодировка, применяемая к содержимому файла. Если значение параметра равно <see langword="null"/>, то будет использовано значение <see cref="P:System.Text.Encoding.Default"/>.</param>
            <returns>Перечислитель, содержащий считанные данные.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="converter"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startLine"/> меньше 1.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="linesCount"/> меньше 0.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Данный метод можно использовать, допустим, если в текстовом файле хранятся строки, представляющие информацию об объектах. Он позволит считать строки, разобрать их и преобразовать в определённый объект. Если строку не удастся распознать, то следует вернуть <see langword="null"/>.</remarks>
        </member>
        <member name="M:xNet.IO.FileHelper.ReadData``1(System.IO.FileInfo,System.Func{System.String,``0},System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            Открывает текстовый файл, считывает диапазон строк, преобразуя их в заданный тип данных с помощью заданного метода, и закрывает файл.
            </summary>
            <typeparam name="T">Тип данных возвращаемых перечислителем и <paramref name="converter"/>.</typeparam>
            <param name="fileInfo">Текстовый файл.</param>
            <param name="converter">Метод, который будет преобразовывать строки в заданный тип данных. Если метод вернёт <see langword="null"/>, то он не будет возвращён перечислителем.</param>
            <param name="startLine">Позиция строки, с которой начинается считывание. Отсчёт от 1.</param>
            <param name="linesCount">Число строк, которое нужно считать. Если значение равно 0, то будут считаны все строки.</param>
            <param name="encoding">Кодировка, применяемая к содержимому файла. Если значение параметра равно <see langword="null"/>, то будет использовано значение <see cref="P:System.Text.Encoding.Default"/>.</param>
            <returns>Перечислитель, содержащий считанные данные.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="fileInfo"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="converter"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startLine"/> меньше 1.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="linesCount"/> меньше 0.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="fileInfo"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="fileInfo"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Данный метод можно использовать, допустим, если в текстовом файле хранятся строки, представляющие информацию об объектах. Он позволит считать строки, разобрать их и преобразовать в определённый объект. Если строку не удастся распознать, то следует вернуть <see langword="null"/>.</remarks>
        </member>
        <member name="M:xNet.IO.FileHelper.ReadData``1(System.String,System.Func{System.String,``0},System.Int32,System.Text.Encoding)">
            <summary>
            Открывает текстовый файл, считывает строки начиная с заданной позиции, преобразуя их в заданный тип данных с помощью заданного метода, и закрывает файл.
            </summary>
            <typeparam name="T">Тип данных возвращаемых перечислителем и <paramref name="converter"/>.</typeparam>
            <param name="path">Путь к текстовому файлу.</param>
            <param name="converter">Метод, который будет преобразовывать строки в заданный тип данных. Если метод вернёт <see langword="null"/>, то он не будет возвращён перечислителем.</param>
            <param name="startLine">Позиция строки, с которой начинается считывание. Отсчёт от 1.</param>
            <param name="encoding">Кодировка, применяемая к содержимому файла. Если значение параметра равно <see langword="null"/>, то будет использовано значение <see cref="P:System.Text.Encoding.Default"/>.</param>
            <returns>Перечислитель, содержащий считанные данные.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="converter"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startLine"/> меньше 1.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Данный метод можно использовать, допустим, если в текстовом файле хранятся строки, представляющие информацию об объектах. Он позволит считать строки, разобрать их и преобразовать в определённый объект. Если строку не удастся распознать, то следует вернуть <see langword="null"/>.</remarks>
        </member>
        <member name="M:xNet.IO.FileHelper.ReadData``1(System.IO.FileInfo,System.Func{System.String,``0},System.Int32,System.Text.Encoding)">
            <summary>
            Открывает текстовый файл, считывает строки начиная с заданной позиции, преобразуя их в заданный тип данных с помощью заданного метода, и закрывает файл.
            </summary>
            <typeparam name="T">Тип данных возвращаемых перечислителем и <paramref name="converter"/>.</typeparam>
            <param name="fileInfo">Текстовый файл.</param>
            <param name="converter">Метод, который будет преобразовывать строки в заданный тип данных. Если метод вернёт <see langword="null"/>, то он не будет возвращён перечислителем.</param>
            <param name="startLine">Позиция линии, с которой начинается считывание. Отсчёт от 1.</param>
            <param name="encoding">Кодировка, применяемая к содержимому файла. Если значение параметра равно <see langword="null"/>, то будет использоваться <see cref="P:System.Text.Encoding.Default"/>.</param>
            <returns>Перечислитель, содержащий считанные объекты.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="fileInfo"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="converter"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startLine"/> меньше 1.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="fileInfo"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="fileInfo"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Данный метод можно использовать, допустим, если в текстовом файле хранятся строки, представляющие информацию об объектах. Он позволит считать строки, разобрать их и преобразовать в определённый объект. Если строку не удастся распознать, то следует вернуть <see langword="null"/>.</remarks>
        </member>
        <member name="M:xNet.IO.FileHelper.ReadData``1(System.String,System.Func{System.String,``0},System.Text.Encoding)">
            <summary>
            Открывает текстовый файл, считывает все строки, преобразуя их в заданный тип данных с помощью заданного метода, и закрывает файл.
            </summary>
            <typeparam name="T">Тип данных возвращаемых перечислителем и <paramref name="converter"/>.</typeparam>
            <param name="path">Путь к текстовому файлу.</param>
            <param name="converter">Метод, который будет преобразовывать строки в заданный тип данных. Если метод вернёт <see langword="null"/>, то он не будет возвращён перечислителем.</param>
            <param name="encoding">Кодировка, применяемая к содержимому файла. Если значение параметра равно <see langword="null"/>, то будет использовано значение <see cref="P:System.Text.Encoding.Default"/>.</param>
            <returns>Перечислитель, содержащий считанные данные.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="path"/> является пустой строкой, содержит только пробелы или содержит недопустимые символы.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="converter"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="path"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="path"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Данный метод можно использовать, допустим, если в текстовом файле хранятся строки, представляющие информацию об объектах. Он позволит считать строки, разобрать их и преобразовать в определённый объект. Если строку не удастся распознать, то следует вернуть <see langword="null"/>.</remarks>
        </member>
        <member name="M:xNet.IO.FileHelper.ReadData``1(System.IO.FileInfo,System.Func{System.String,``0},System.Text.Encoding)">
            <summary>
            Открывает текстовый файл, считывает все строки, преобразуя их в заданный тип данных с помощью заданного метода, и закрывает файл.
            </summary>
            <typeparam name="T">Тип данных возвращаемых перечислителем и <paramref name="converter"/>.</typeparam>
            <param name="fileInfo">Текстовый файл.</param>
            <param name="converter">Метод, который будет преобразовывать строки в заданный тип данных. Если метод вернёт <see langword="null"/>, то он не будет возвращён перечислителем.</param>
            <param name="encoding">Кодировка, применяемая к содержимому файла. Если значение параметра равно <see langword="null"/>, то будет использовано значение <see cref="P:System.Text.Encoding.Default"/>.</param>
            <returns>Перечислитель, содержащий считанные данные.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="fileInfo"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="converter"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="fileInfo"/> указывает на несуществующий файл.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Значение параметра <paramref name="fileInfo"/> указывает на недопустимый путь.</exception>
            <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при работе с файлом.</exception>
            <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Операция чтения файла не поддерживается на текущей платформе.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Значение параметра <paramref name="path"/> определяет каталог.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Вызывающий оператор не имеет необходимого разрешения.</exception>
            <remarks>Данный метод можно использовать, допустим, если в текстовом файле хранятся строки, представляющие информацию об объектах. Он позволит считать строки, разобрать их и преобразовать в определённый объект. Если строку не удастся распознать, то следует вернуть <see langword="null"/>.</remarks>
        </member>
        <member name="T:xNet.Net.ProxyType">
            <summary>
            Тип прокси-сервера.
            </summary>
        </member>
        <member name="F:xNet.Net.ProxyType.Http">
            <summary>
            Http.
            </summary>
        </member>
        <member name="F:xNet.Net.ProxyType.Socks4">
            <summary>
            Socks4.
            </summary>
        </member>
        <member name="F:xNet.Net.ProxyType.Socks4a">
            <summary>
            Socks4a.
            </summary>
        </member>
        <member name="F:xNet.Net.ProxyType.Socks5">
            <summary>
            Socks5.
            </summary>
        </member>
        <member name="T:xNet.Net.ProxyException">
            <summary>
            Исключение, которое выбрасывается, в случае возникновения ошибки при работе с прокси.
            </summary>
        </member>
        <member name="M:xNet.Net.ProxyException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.ProxyException"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.ProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.ProxyException"/> заданным сообщением об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
            <param name="innerException">Исключение, вызвавшее текущие исключение, или значение <see langword="null"/>.</param>
        </member>
        <member name="M:xNet.Net.ProxyException.#ctor(System.String,xNet.Net.ProxyClient,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.ProxyException"/> заданным сообщением об ошибке и прокси-клиентом.
            </summary>
            <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
            <param name="proxyClient">Прокси-клиент, в котором произошла ошибка.</param>
            <param name="innerException">Исключение, вызвавшее текущие исключение, или значение <see langword="null"/>.</param>
        </member>
        <member name="M:xNet.Net.ProxyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.ProxyException"/> заданными экземплярами <see cref="T:System.Runtime.Serialization.SerializationInfo"/> и <see cref="T:System.Runtime.Serialization.StreamingContext"/>.
            </summary>
            <param name="serializationInfo">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo"/>, который содержит сведения, требуемые для сериализации нового экземпляра класса <see cref="T:xNet.Net.ProxyException"/>.</param>
            <param name="streamingContext">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext"/>, содержащий источник сериализованного потока, связанного с новым экземпляром класса <see cref="T:xNet.Net.ProxyException"/>.</param>
        </member>
        <member name="M:xNet.Net.ProxyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Заполняет экземпляр <see cref="T:System.Runtime.Serialization.SerializationInfo"/> данными, необходимыми для сериализации исключения <see cref="T:xNet.Net.ProxyException"/>.
            </summary>
            <param name="serializationInfo">Данные о сериализации, <see cref="T:System.Runtime.Serialization.SerializationInfo"/>, которые должны использоваться.</param>
            <param name="streamingContext">Данные о сериализации, <see cref="T:System.Runtime.Serialization.StreamingContext"/>, которые должны использоваться.</param>
        </member>
        <member name="P:xNet.Net.ProxyException.ProxyClient">
            <summary>
            Возвращает прокси-клиент, в котором произошла ошибка.
            </summary>
        </member>
        <member name="T:xNet.Net.ProxyHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с прокси.
            </summary>
        </member>
        <member name="M:xNet.Net.ProxyHelper.CreateProxyClient(xNet.Net.ProxyType,System.String,System.Int32,System.String,System.String)">
            <summary>
            Создаёт клиент для заданного типа прокси-сервера.
            </summary>
            <param name="proxyType">Тип прокси-сервера.</param>
            <param name="host">Хост прокси-сервера, или значение <see langword="null"/>.</param>
            <param name="port">Порт прокси-сервера.</param>
            <param name="username">Имя пользователя для авторизации на прокси-сервере, или значение <see langword="null"/>.</param>
            <param name="password">Пароль для авторизации на прокси-сервере, или значение <see langword="null"/>.</param>
            <returns>Экземпляр класса прокси-клиента, унаследованный от <see cref="T:xNet.Net.ProxyClient"/>.</returns>
            <exception cref="T:System.InvalidOperationException">Получен неподдерживаемый тип прокси-сервера.</exception>
        </member>
        <member name="T:xNet.Rand">
            <summary>
            Представляет генератор псевдослучайных чисел и строк.
            </summary>
            <remarks>Данный класс является потокобезопасным.</remarks>
        </member>
        <member name="M:xNet.Rand.Next">
            <summary>
            Возвращает неотрицательное случайное число.
            </summary>
            <returns>Неотрицательное случайное число.</returns>
        </member>
        <member name="M:xNet.Rand.Next(System.Int32)">
            <summary>
            Возвращает неотрицательное случайное число, которое меньше заданого максимального значения.
            </summary>
            <param name="maxValue">Исключенный верхний предел возвращаемого случайного числа. Значение параметра должно быть больше, либо равно нулю.</param>
            <returns>Неотрицательное случайное число.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxValue"/> меньше 0.</exception>
        </member>
        <member name="M:xNet.Rand.Next(System.Int32,System.Int32)">
            <summary>
            Возвращает случайное число в указанном диапазоне.
            </summary>
            <param name="minValue">Включенный нижний предел возвращаемого случайного числа. </param>
            <param name="maxValue">Исключенный верхний предел возвращаемого случайного числа. Значение параметра должно быть больше, либо равно значению параметра <paramref name="minValue"/>.</param>
            <returns>Неотрицательное случайное число.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="minValue"/> больше значения параметра <paramref name="maxValue"/>.</exception>
        </member>
        <member name="M:xNet.Rand.NextBytes(System.Byte[])">
            <summary>
            Заполняет элементы указанного массива байтов случайными числами.
            </summary>
            <param name="buffer">Массив байтов, который будет заполнен случайными числами.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="buffer"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="M:xNet.Rand.NextDouble">
            <summary>
            Возвращает случайное число в диапазоне от 0,0 до 1,0.
            </summary>
            <returns>Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.</returns>
        </member>
        <member name="M:xNet.Rand.NextString(System.Int32,System.Boolean)">
            <summary>
            Возвращает случайную строку, состоящую из латинских букв и цифр.
            </summary>
            <param name="length">Длина случайной строки.</param>
            <param name="onlyLetters">Указывает, нужно ли генерировать строку только из букв.</param>
            <returns>Случайная строка, состоящая из латинских букв и цифр.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length"/> меньше 1.</exception>
        </member>
        <member name="M:xNet.Rand.NextString(System.String)">
            <summary>
            Возвращает случайную строку, которая формируется с помощью специальных конструкций.
            </summary>
            <param name="sourceStr">Исходная строка, которая содержит специальные конструкции.</param>
            <returns>Случайная строка, сформированная с помощью специальных конструкций.</returns>
            <remarks>Специальная конструкция имеет вид - {значение1|значение2|значение3|..n}, где значения разделяются с помощью символа '|'. Когда встречается подобная конструкция, то из неё выбирается случайное значение и подставляется за место конструкции.</remarks>
        </member>
        <member name="T:xNet.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:xNet.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:xNet.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentException_EmptyString">
            <summary>
              Looks up a localized string similar to Значение параметра не может быть строкой нулевой длины..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentException_HttpRequest_GetNotAvailableHeader">
            <summary>
              Looks up a localized string similar to Значение заголовка &apos;{0}&apos; можно получить только с помощью специального свойства..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentException_HttpRequest_SetNotAvailableHeader">
            <summary>
              Looks up a localized string similar to Значение заголовка &apos;{0}&apos; можно задать только с помощью специального свойства..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentException_MultiThreading_BegIndexRangeMoreEndIndex">
            <summary>
              Looks up a localized string similar to Начальный индекс диапазона не может быть больше конечного индекса..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentException_NotContainAttribute">
            <summary>
              Looks up a localized string similar to Заданный тип не содержит обязательного атрибута: {0}.
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentException_OnlyAbsoluteUri">
            <summary>
              Looks up a localized string similar to Допустимо использовать только абсолютный URI..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentException_WrongPath">
            <summary>
              Looks up a localized string similar to Путь является пустой строкой, содержит только пробелы или содержит недопустимые символы..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentOutOfRangeException_CanNotBeLess">
            <summary>
              Looks up a localized string similar to Значение параметра не может быть меньше {0}..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentOutOfRangeException_CanNotBeLessOrMore">
            <summary>
              Looks up a localized string similar to Значение параметра не может быть меньше {0} или больше {1}..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentOutOfRangeException_StringHelper_MoreLengthString">
            <summary>
              Looks up a localized string similar to Начальная позиция не может быть больше длины строки..
            </summary>
        </member>
        <member name="P:xNet.Resources.ArgumentOutOfRangeException_StringLengthCanNotBeMore">
            <summary>
              Looks up a localized string similar to Длина строки не должна быть больше {0} символов..
            </summary>
        </member>
        <member name="P:xNet.Resources.DirectoryNotFoundException_DirectoryNotFound">
            <summary>
              Looks up a localized string similar to Путь указывает на несуществующую директорию {0}..
            </summary>
        </member>
        <member name="P:xNet.Resources.FormatException_ProxyClient_WrongPort">
            <summary>
              Looks up a localized string similar to Неверно задан порт..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_ClientError">
            <summary>
              Looks up a localized string similar to Ошибка на стороне клиента. Код состояния: {0}.
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_ConnectTimeout">
            <summary>
              Looks up a localized string similar to Вышло время ожидания подключения к HTTP-серверу &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_Default">
            <summary>
              Looks up a localized string similar to Произошла ошибка при работе с HTTP-протоколом..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_FailedConnect">
            <summary>
              Looks up a localized string similar to Не удалось соединиться с HTTP-сервером &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_FailedGetHostAddresses">
            <summary>
              Looks up a localized string similar to Не удалось получить IP-адреса узла &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_FailedReceiveMessageBody">
            <summary>
              Looks up a localized string similar to Не удалось загрузить тело сообщения ответа от HTTP-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_FailedReceiveResponse">
            <summary>
              Looks up a localized string similar to Не удалось загрузить ответ от HTTP-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_FailedSendRequest">
            <summary>
              Looks up a localized string similar to Не удалось отправить запрос HTTP-серверу &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_FailedSslConnect">
            <summary>
              Looks up a localized string similar to Не удалось установить SSL-соединение с HTTP-сервером &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_LimitRedirections">
            <summary>
              Looks up a localized string similar to Превышено допустимое количество последовательных переадресаций..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_ReceivedEmptyResponse">
            <summary>
              Looks up a localized string similar to Получен пустой ответ от HTTP-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_ReceivedWrongResponse">
            <summary>
              Looks up a localized string similar to Получен ошибочный ответ от HTTP-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_SeverError">
            <summary>
              Looks up a localized string similar to Ошибка на стороне сервера. Код состояния: {0}.
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_WaitDataTimeout">
            <summary>
              Looks up a localized string similar to Вышло время ожидания данных от HTTP-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_WrongChunkedBlockLength">
            <summary>
              Looks up a localized string similar to Получен неверный размер блока данных при использовании Chunked: {0}.
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_WrongCookie">
            <summary>
              Looks up a localized string similar to Получен неверный кукис &apos;{0}&apos; от HTTP-сервера &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.HttpException_WrongHeader">
            <summary>
              Looks up a localized string similar to Получен неверный заголовок &apos;{0}&apos; от HTTP-сервера &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_HttpResponse_HasError">
            <summary>
              Looks up a localized string similar to Невозможно выполнить метод, так как при получении ответа произошла ошибка..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_MultipartDataElement_FailedGetFileSize">
            <summary>
              Looks up a localized string similar to Не удалось получить размер файла &apos;{0}&apos;, так как он не существует, либо по другой причине..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_MultipartDataElement_FailedReadFile">
            <summary>
              Looks up a localized string similar to Не удалось считать файл &apos;{0}&apos;, так как он не существует, либо по другой причине..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_MultiThreading_CannotStart">
            <summary>
              Looks up a localized string similar to Невозможно начать новую работу во время выполнения асинхронной операции..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_NetProcesses_CannotSetValue">
            <summary>
              Looks up a localized string similar to Невозможно установить значение во время выполнения асинхронного действия..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_NotSupportedEncodingFormat">
            <summary>
              Looks up a localized string similar to Получен неподдерживаемый формат кодирования: {0}.
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_ProxyClient_WrongHost">
            <summary>
              Looks up a localized string similar to Хост не может быть неопределённым или иметь нулевую длину..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_ProxyClient_WrongPassword">
            <summary>
              Looks up a localized string similar to Длина пароля не может быть больше 255 символов..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_ProxyClient_WrongPort">
            <summary>
              Looks up a localized string similar to Порт не может быть меньше 1 или больше 65535..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_ProxyClient_WrongUsername">
            <summary>
              Looks up a localized string similar to Длина имени пользователя не может быть больше 255 символов..
            </summary>
        </member>
        <member name="P:xNet.Resources.InvalidOperationException_ProxyHelper_NotSupportedProxyType">
            <summary>
              Looks up a localized string similar to Не поддерживаемый тип прокси-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.NetException_Default">
            <summary>
              Looks up a localized string similar to Произошла ошибка при работе с сетью..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_CommandError">
            <summary>
              Looks up a localized string similar to {0} Прокси-сервер &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_ConnectTimeout">
            <summary>
              Looks up a localized string similar to Вышло время ожидания подключения к прокси-серверу &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_Default">
            <summary>
              Looks up a localized string similar to Произошла ошибка при работе с прокси..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_Error">
            <summary>
              Looks up a localized string similar to Произошла ошибка при работе с прокси-сервером &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_FailedConnect">
            <summary>
              Looks up a localized string similar to Не удалось соединиться с прокси-сервером &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_FailedGetHostAddresses">
            <summary>
              Looks up a localized string similar to Не удалось получить IP-адреса узла &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_NotSupportedAddressType">
            <summary>
              Looks up a localized string similar to Хост &apos;{0}&apos; типа &apos;{1}&apos; не поддерживает используемый тип адресса. Поддерживаются следующие типы: InterNetwork и InterNetworkV6. Прокси-сервер &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_ReceivedEmptyResponse">
            <summary>
              Looks up a localized string similar to Получен пустой ответ от прокси-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_ReceivedWrongResponse">
            <summary>
              Looks up a localized string similar to Получен ошибочный ответ от прокси-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_ReceivedWrongStatusCode">
            <summary>
              Looks up a localized string similar to Получен неверный код статуса &apos;{0}&apos; от прокси-сервера &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_Socks5_FailedAuthOn">
            <summary>
              Looks up a localized string similar to Не удалось выполнить аутентификацию на прокси-сервере &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.ProxyException_WaitDataTimeout">
            <summary>
              Looks up a localized string similar to Вышло время ожидания данных от прокси-сервера &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks_UnknownError">
            <summary>
              Looks up a localized string similar to Неизвестная ошибка..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks4_CommandReplyRequestRejectedCannotConnectToIdentd">
            <summary>
              Looks up a localized string similar to Запрос не удался, потому-что не запущен identd (или не доступен с сервера)..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks4_CommandReplyRequestRejectedDifferentIdentd">
            <summary>
              Looks up a localized string similar to Запрос не удался, поскольку клиентский identd не может подтвердить идентификатор пользователя в запросе..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks4_CommandReplyRequestRejectedOrFailed">
            <summary>
              Looks up a localized string similar to Запрос отклонён или ошибочен..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_AuthMethodReplyNoAcceptableMethods">
            <summary>
              Looks up a localized string similar to Предложенные методы аутентификации не поддерживаются..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyAddressTypeNotSupported">
            <summary>
              Looks up a localized string similar to Тип адреса не поддерживается..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyCommandNotSupported">
            <summary>
              Looks up a localized string similar to Команда не поддерживается, либо ошибка протокола..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyConnectionNotAllowedByRuleset">
            <summary>
              Looks up a localized string similar to Соединение запрещено набором правил..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyConnectionRefused">
            <summary>
              Looks up a localized string similar to Отказ в соединении..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyGeneralSocksServerFailure">
            <summary>
              Looks up a localized string similar to Ошибка SOCKS-сервера..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyHostUnreachable">
            <summary>
              Looks up a localized string similar to Хост недоступен..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyNetworkUnreachable">
            <summary>
              Looks up a localized string similar to Сеть недоступна..
            </summary>
        </member>
        <member name="P:xNet.Resources.Socks5_CommandReplyTTLExpired">
            <summary>
              Looks up a localized string similar to Истёк TTL..
            </summary>
        </member>
        <member name="P:xNet.Resources.UnauthorizedAccessException_DirOnlyForRead">
            <summary>
              Looks up a localized string similar to Каталог &apos;{0}&apos; доступен только для чтения..
            </summary>
        </member>
        <member name="T:xNet.Security.Cryptography.CryptographyHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с криптографией.
            </summary>
        </member>
        <member name="M:xNet.Security.Cryptography.CryptographyHelper.GetMd5Hash(System.Byte[])">
            <summary>
            Вычесляет MD5 хэш-значение для заданного массива байтов.
            </summary>
            <param name="data">Входные данные, для которых вычисляется MD5 хэш-значение.</param>
            <returns>Вычисляемое MD5 хэш-значение.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="data"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Политика FIPS-совместимого алгоритма не задействована.</exception>
        </member>
        <member name="M:xNet.Security.Cryptography.CryptographyHelper.GetMd5Hash(System.String,System.Text.Encoding)">
            <summary>
            Вычесляет MD5 хэш-значение для заданной строки.
            </summary>
            <param name="data">Входные данные, для которых вычисляется MD5 хэш-значение.</param>
            <param name="encoding">Кодировка, применяемая для преобразования данных в последовательность байтов. Если значение параметра равно <see langword="null"/>, то будет использоваться <see cref="P:System.Text.Encoding.Default"/>.</param>
            <returns>Вычисляемое MD5 хэш-значение.</returns>
            <exception cref="T:System.InvalidOperationException">Политика FIPS-совместимого алгоритма не задействована.</exception>
        </member>
        <member name="T:xNet.Net.Socks4aProxyClient">
            <summary>
            Представляет клиент для Socks4a прокси-сервера.
            </summary>
        </member>
        <member name="T:xNet.Net.Socks4ProxyClient">
            <summary>
            Представляет клиент для Socks4 прокси-сервера.
            </summary>
        </member>
        <member name="M:xNet.Net.Socks4ProxyClient.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.Socks4ProxyClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/> заданным хостом прокси-сервера, и устанавливает порт равным - 1080.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.Socks4ProxyClient.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.Socks4ProxyClient.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
            <param name="username">Имя пользователя для авторизации на прокси-сервере.</param>
        </member>
        <member name="M:xNet.Net.Socks4ProxyClient.Parse(System.String)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/>.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <returns>Экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="proxyAddress"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="proxyAddress"/> является пустой строкой.</exception>
            <exception cref="T:System.FormatException">Формат порта является неправильным.</exception>
            <exception cref="T:System.InvalidOperationException">Получен неподдерживаемый тип прокси-сервера.</exception>
        </member>
        <member name="M:xNet.Net.Socks4ProxyClient.TryParse(System.String,xNet.Net.Socks4ProxyClient@)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/>. Возвращает значение, указывающее, успешно ли выполнено преобразование.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <param name="result">Если преобразование выполнено успешно, то содержит экземпляр класса <see cref="T:xNet.Net.Socks4ProxyClient"/>, иначе <see langword="null"/>.</param>
            <returns>Значение <see langword="true"/>, если параметр <paramref name="proxyAddress"/> преобразован успешно, иначе <see langword="false"/>.</returns>
        </member>
        <member name="M:xNet.Net.Socks4ProxyClient.CreateConnection(System.String,System.Int32)">
            <summary>
            Создаёт соединение с прокси-сервером.
            </summary>
            <param name="destinationHost">Хост пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <param name="destinationPort">Порт пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <returns>Соединение с прокси-сервером.</returns>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Host"/> равно <see langword="null"/> или имеет нулевую длину.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Port"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Username"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Password"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="destinationHost"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="destinationHost"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="destinationPort"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="M:xNet.Net.Socks4aProxyClient.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.Socks4aProxyClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/> заданным хостом прокси-сервера, и устанавливает порт равным - 1080.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.Socks4aProxyClient.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.Socks4aProxyClient.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
            <param name="username">Имя пользователя для авторизации на прокси-сервере.</param>
        </member>
        <member name="M:xNet.Net.Socks4aProxyClient.Parse(System.String)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/>.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <returns>Экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="proxyAddress"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="proxyAddress"/> является пустой строкой.</exception>
            <exception cref="T:System.FormatException">Формат порта является неправильным.</exception>
            <exception cref="T:System.InvalidOperationException">Получен неподдерживаемый тип прокси-сервера.</exception>
        </member>
        <member name="M:xNet.Net.Socks4aProxyClient.TryParse(System.String,xNet.Net.Socks4aProxyClient@)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/>. Возвращает значение, указывающее, успешно ли выполнено преобразование.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <param name="result">Если преобразование выполнено успешно, то содержит экземпляр класса <see cref="T:xNet.Net.Socks4aProxyClient"/>, иначе <see langword="null"/>.</param>
            <returns>Значение <see langword="true"/>, если параметр <paramref name="proxyAddress"/> преобразован успешно, иначе <see langword="false"/>.</returns>
        </member>
        <member name="T:xNet.Net.Socks5ProxyClient">
            <summary>
            Представляет клиент для Socks5 прокси-сервера.
            </summary>
        </member>
        <member name="M:xNet.Net.Socks5ProxyClient.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/>.
            </summary>
        </member>
        <member name="M:xNet.Net.Socks5ProxyClient.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/> заданным хостом прокси-сервера, и устанавливает порт равным - 1080.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.Socks5ProxyClient.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
        </member>
        <member name="M:xNet.Net.Socks5ProxyClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/> заданными данными о прокси-сервере.
            </summary>
            <param name="host">Хост прокси-сервера.</param>
            <param name="port">Порт прокси-сервера.</param>
            <param name="username">Имя пользователя для авторизации на прокси-сервере.</param>
            <param name="password">Пароль для авторизации на прокси-сервере.</param>
        </member>
        <member name="M:xNet.Net.Socks5ProxyClient.Parse(System.String)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/>.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <returns>Экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="proxyAddress"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="proxyAddress"/> является пустой строкой.</exception>
            <exception cref="T:System.FormatException">Формат порта является неправильным.</exception>
            <exception cref="T:System.InvalidOperationException">Получен неподдерживаемый тип прокси-сервера.</exception>
        </member>
        <member name="M:xNet.Net.Socks5ProxyClient.TryParse(System.String,xNet.Net.Socks5ProxyClient@)">
            <summary>
            Преобразует строку в экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/>. Возвращает значение, указывающее, успешно ли выполнено преобразование.
            </summary>
            <param name="proxyAddress">Строка вида - хост:порт:имя_пользователя:пароль. Три последних параметра являются необязательными.</param>
            <param name="proxyType">Тип прокси-сервера.</param>
            <param name="result">Если преобразование выполнено успешно, то содержит экземпляр класса <see cref="T:xNet.Net.Socks5ProxyClient"/>, иначе <see langword="null"/>.</param>
            <returns>Значение <see langword="true"/>, если параметр <paramref name="proxyAddress"/> преобразован успешно, иначе <see langword="false"/>.</returns>
        </member>
        <member name="M:xNet.Net.Socks5ProxyClient.CreateConnection(System.String,System.Int32)">
            <summary>
            Создаёт соединение с прокси-сервером.
            </summary>
            <param name="destinationHost">Хост пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <param name="destinationPort">Порт пункта назначения, с которым нужно связаться через прокси-сервер.</param>
            <returns>Соединение с прокси-сервером.</returns>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Host"/> равно <see langword="null"/> или имеет нулевую длину.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Port"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Username"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:xNet.Net.ProxyClient.Password"/> имеет длину более 255 символов.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="destinationHost"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="destinationHost"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="destinationPort"/> меньше 1 или больше 65535.</exception>
            <exception cref="T:xNet.Net.ProxyException">Ошибка при работе с прокси-сервером.</exception>
        </member>
        <member name="T:xNet.Text.StringHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе со строками.
            </summary>
        </member>
        <member name="M:xNet.Text.StringHelper.Reverse(System.String)">
            <summary>
            Инвертирует все симолы в строке.
            </summary>
            <param name="str">Строка, в которой будут инвертированы все символы.</param>
            <returns>Строка с инвертированными символами.</returns>
        </member>
        <member name="M:xNet.Text.StringHelper.Substring(System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Извлекает подстроку из строки. Подстрока начинается с конца позиции подстроки <paramref name="left"/> и до конца строки. Поиск начинается с заданной позиции.
            </summary>
            <param name="str">Строка, в которой будет поиск подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="startIndex">Позиция, с которой начинается поиск подстроки. Отсчёт от 0.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> меньше 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> равно или больше длины строки <paramref name="str"/>.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.Substring(System.String,System.String,System.StringComparison)">
            <summary>
            Извлекает подстроку из строки. Подстрока начинается с конца позиции подстроки <paramref name="left"/> и до конца строки.
            </summary>
            <param name="str">Строка, в которой будет поиск подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> является пустой строкой.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.Substring(System.String,System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Извлекает подстроку из строки. Подстрока ищется между двумя заданными строками, начиная с заданной позиции.
            </summary>
            <param name="str">Строка, в которой будет поиск подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="right">Строка, которая находится справа от искомой подстроки.</param>
            <param name="startIndex">Позиция, с которой начинается поиск подстроки. Отсчёт от 0.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> или <paramref name="right"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> или <paramref name="right"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> меньше 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> равно или больше длины строки <paramref name="str"/>.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.Substring(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Извлекает подстроку из строки. Подстрока ищется между двумя заданными строками.
            </summary>
            <param name="str">Строка, в которой будет поиск подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="right">Строка, которая находится справа от искомой подстроки.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> или <paramref name="right"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> или <paramref name="right"/> является пустой строкой.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.LastSubstring(System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Извлекает последнею подстроку из строки. Подстрока начинается с конца позиции подстроки <paramref name="left"/> и до конца строки. Поиск начинается с заданной позиции.
            </summary>
            <param name="str">Строка, в которой будет поиск последней подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="startIndex">Позиция, с которой начинается поиск подстроки. Отсчёт от 0.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> меньше 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> равно или больше длины строки <paramref name="str"/>.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.LastSubstring(System.String,System.String,System.StringComparison)">
            <summary>
            Извлекает последнею подстроку из строки. Подстрока начинается с конца позиции подстроки <paramref name="left"/> и до конца строки.
            </summary>
            <param name="str">Строка, в которой будет поиск последней подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> является пустой строкой.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.LastSubstring(System.String,System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Извлекает последнею подстроку из строки. Подстрока ищется между двумя заданными строками, начиная с заданной позиции.
            </summary>
            <param name="str">Строка, в которой будет поиск последней подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="right">Строка, которая находится справа от искомой подстроки.</param>
            <param name="startIndex">Позиция, с которой начинается поиск подстроки. Отсчёт от 0.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> или <paramref name="right"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> или <paramref name="right"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> меньше 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> равно или больше длины строки <paramref name="str"/>.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.LastSubstring(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Извлекает последнею подстроку из строки. Подстрока ищется между двумя заданными строками.
            </summary>
            <param name="str">Строка, в которой будет поиск последней подстроки.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="right">Строка, которая находится справа от искомой подстроки.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденая подстрока, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> или <paramref name="right"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> или <paramref name="right"/> является пустой строкой.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.Substrings(System.String,System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Извлекает подстроки из строки. Подстрока ищется между двумя заданными строками, начиная с заданной позиции.
            </summary>
            <param name="str">Строка, в которой будет поиск подстрок.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="right">Строка, которая находится справа от искомой подстроки.</param>
            <param name="startIndex">Позиция, с которой начинается поиск подстрок. Отсчёт от 0.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденые подстроки, иначе пустой массив строк.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> или <paramref name="right"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> или <paramref name="right"/> является пустой строкой.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> меньше 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex"/> равно или больше длины строки <paramref name="str"/>.</exception>
        </member>
        <member name="M:xNet.Text.StringHelper.Substrings(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Извлекает подстроки из строки. Подстрока ищется между двумя заданными строками.
            </summary>
            <param name="str">Строка, в которой будет поиск подстрок.</param>
            <param name="left">Строка, которая находится слева от искомой подстроки.</param>
            <param name="right">Строка, которая находится справа от искомой подстроки.</param>
            <param name="comparsion">Одно из значений перечисления, определяющее правила поиска.</param>
            <returns>Найденые подстроки, иначе пустой массив строк.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="left"/> или <paramref name="right"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="left"/> или <paramref name="right"/> является пустой строкой.</exception>
        </member>
        <member name="T:xNet.Threading.AsyncEvent`1">
            <summary>
            Представляет оболочку для асинхронного вызова события с помощью класса <see cref="T:System.ComponentModel.AsyncOperation"/>.
            </summary>
            <typeparam name="TEventArgs">Тип данных аргументов события. Должен наследоваться от <see cref="T:System.EventArgs"/>.</typeparam>
        </member>
        <member name="M:xNet.Threading.AsyncEvent`1.#ctor(System.Action{`0})">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Threading.AsyncEvent`1"/> заданным методом вызова события.
            </summary>
            <param name="onEvent">Метод вызова события.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="onEvent"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="M:xNet.Threading.AsyncEvent`1.On(System.Object,`0)">
            <summary>
            Вызывает событие обычным образом.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="eventArgs">Аргументы события.</param>
        </member>
        <member name="M:xNet.Threading.AsyncEvent`1.Post(System.ComponentModel.AsyncOperation,System.Object,`0)">
            <summary>
            Асинхронно вызывает событие.
            </summary>
            <param name="asyncOperation">Объект для асинхронных операций.</param>
            <param name="sender">Источник события.</param>
            <param name="eventArgs">Аргументы события.</param>
            <remarks>Если значение параметра <paramref name="asyncOperation"/> равно <see langword="null"/>, то событие будет вызвано обычным образом.</remarks>
            <exception cref="T:System.InvalidOperationException">Уже было завершено выполнение асинхронных операций для <paramref name="asyncOperation"/>.</exception>
        </member>
        <member name="M:xNet.Threading.AsyncEvent`1.PostOperationCompleted(System.ComponentModel.AsyncOperation,System.Object,`0)">
            <summary>
            Асинхронно вызывает событие и завершает выполнение асинхронной операции объекта <see cref="T:System.ComponentModel.AsyncOperation"/>.
            </summary>
            <param name="asyncOperation">Объект для асинхронных операций.</param>
            <param name="sender">Источник события.</param>
            <param name="eventArgs">Аргументы события.</param>
            <remarks>Если значение параметра <paramref name="asyncOperation"/> равно <see langword="null"/>, то событие будет вызвано обычным образом.</remarks>
            <exception cref="T:System.InvalidOperationException">Уже было завершено выполнение асинхронных операций для <paramref name="asyncOperation"/>.</exception>
        </member>
        <member name="P:xNet.Threading.AsyncEvent`1.EventHandler">
            <summary>
            Обработчик события.
            </summary>
        </member>
        <member name="T:xNet.Threading.MultiThreadingRepeatEventArgs">
            <summary>
            Предоставляет данные для события, сообщающим о завершение одного из повторов выполнения асинхронной операции.
            </summary>
        </member>
        <member name="M:xNet.Threading.MultiThreadingRepeatEventArgs.#ctor(System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Threading.MultiThreadingRepeatEventArgs"/>.
            </summary>
            <param name="exception">Число выполненных повторов.</param>
        </member>
        <member name="P:xNet.Threading.MultiThreadingRepeatEventArgs.RepsCount">
            <summary>
            Возвращает число выполненных повторов.
            </summary>
        </member>
        <member name="T:xNet.Threading.MultiThreadingCanceledException">
            <summary>
            Исключение, которое выбрасывается, в случае отмены выполнения асинхронной операции.
            </summary>
        </member>
        <member name="T:xNet.Threading.MultiThreading`1">
            <summary>
            Представляет класс для выполнения операции в отдельных фоновых потоках.
            </summary>
            <typeparam name="TProgress">Тип данных значения, которое передаётся в <see cref="T:xNet.Threading.MultiThreadingProgressEventArgs`1"/>.</typeparam>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.#ctor(System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Threading.MultiThreading`1"/>.
            </summary>
            <param name="threadsCount">Число потоков используемое для выполнения асинхронной операции.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="threadsCount"/> меньше 1.</exception>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.Run(System.Action{xNet.Threading.MultiThreading{`0}})">
            <summary>
            Запускает выполнение операции в отдельных фоновых потоках.
            </summary>
            <param name="action">Операция, которая будет выполнятся в отдельных фоновых потоках.</param>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
            <exception cref="T:System.InvalidOperationException">Вызов метода во время выполнения асинхронной операции.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="action"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.RunFor(System.Int32,System.Int32,System.Action{xNet.Threading.MultiThreading{`0},System.Int32})">
            <summary>
            Запускает выполнение цикла <see langword="for"/> в отдельных фоновых потоках. Операция выполняется на каждой итерации цикла.
            </summary>
            <param name="fromInclusive">Начальный индекс (включительный).</param>
            <param name="toExclusive">Конечный индекс (исключительный).</param>
            <param name="action">Операция, которая будет выполнятся в отдельных фоновых потоках на каждой итерации цикла.</param>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
            <exception cref="T:System.InvalidOperationException">Вызов метода во время выполнения асинхронной операции.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="fromInclusive"/> меньше 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="fromInclusive"/> больше значения параметра <paramref name="toExclusive"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="action"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.RunForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{xNet.Threading.MultiThreading{`0},``0})">
            <summary>
            Запускает выполнение цикла <see langword="foreach"/> в отдельных фоновых потоках. Операция выполняется на каждой итерации цикла.
            </summary>
            <typeparam name="T">Тип данных в источнике.</typeparam>
            <param name="source">Источник данных.</param>
            <param name="action">Операция, которая будет выполнятся в отдельных фоновых потоках на каждой итерации цикла.</param>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
            <exception cref="T:System.InvalidOperationException">Вызов метода во время выполнения асинхронной операции.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="action"/> равно <see langword="null"/>.</exception>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.ReportProgress(`0)">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.ProgressChanged"/>.
            </summary>
            <param name="value">Значение передаваемое событием.</param>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.ReportProgressSync(`0)">
            <summary>
            Вызывает обычным способом событие <see cref="E:xNet.Threading.MultiThreading`1.ProgressChanged"/>.
            </summary>
            <param name="value">Значение передаваемое событием.</param>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
            <remarks>Если возможности асинхронных событий не требуются, то используйте данный метод, так как это повысит производительность.</remarks>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.ReportLog(System.String,xNet.Threading.MessageType)">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.LogChanged"/>.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения.</param>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.ReportLogSync(System.String,xNet.Threading.MessageType)">
            <summary>
            Вызывает обычным способом событие <see cref="E:xNet.Threading.MultiThreading`1.LogChanged"/>.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения.</param>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
            <remarks>Если возможности асинхронных событий не требуются, то используйте данный метод, так как это повысит производительность.</remarks>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.ThrowIfCanceling">
            <summary>
            Генерирует исключение, если значение свойства <see cref="P:xNet.Threading.MultiThreading`1.Canceling"/> равно <see langword="true"/>.
            </summary>
            <exception cref="T:xNet.Threading.MultiThreadingCanceledException">Значение свойства <see cref="P:xNet.Threading.MultiThreading`1.Canceling"/> равно <see langword="true"/>.</exception>
            <remarks>Генерируемое исключение поглощается автоматически, если оно произошло в методе действия.</remarks>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.Cancel">
            <summary>
            Запрашивает отмену выполнения асинхронной операции и вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.CancelingWork"/>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удалён.</exception>
            <remarks>Если отмена уже была запрошена, то повторного вызова события не будет.</remarks>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.Dispose">
            <summary>
            Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:xNet.Threading.MultiThreading`1"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:xNet.Threading.MultiThreading`1.Dispose(System.Boolean)" -->
        <member name="M:xNet.Threading.MultiThreading`1.OnBeginningWork(System.EventArgs)">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.BeginningWork"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.OnCancelingWork(System.EventArgs)">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.CancelingWork"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.OnRepeatCompleted(xNet.Threading.MultiThreadingRepeatEventArgs)">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.RepeatCompleted"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.OnWorkCompleted(xNet.Threading.MultiThreadingCompletedEventArgs)">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.WorkCompleted"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.OnProgressChanged(xNet.Threading.MultiThreadingProgressEventArgs{`0})">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.ProgressChanged"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="M:xNet.Threading.MultiThreading`1.OnLogChanged(xNet.Threading.MultiThreadingLoggingEventArgs)">
            <summary>
            Вызывает событие <see cref="E:xNet.Threading.MultiThreading`1.LogChanged"/>.
            </summary>
            <param name="e">Аргументы события.</param>
        </member>
        <member name="E:xNet.Threading.MultiThreading`1.BeginningWork">
            <summary>
            Возникает при вызове метода <see cref="M:xNet.Threading.MultiThreading`1.Run(System.Action{xNet.Threading.MultiThreading{`0}})"/>, <see cref="M:xNet.Threading.MultiThreading`1.RunFor(System.Int32,System.Int32,System.Action{xNet.Threading.MultiThreading{`0},System.Int32})"/> или <see cref="M:xNet.Threading.MultiThreading`1.RunForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{xNet.Threading.MultiThreading{`0},``0})"/>.
            </summary>
        </member>
        <member name="E:xNet.Threading.MultiThreading`1.CancelingWork">
            <summary>
            Возникает при отмене выполнения асинхронной операции.
            </summary>
            <remarks>Данное событие может быть вызвано автоматически, если во время выполнения асинхронной операции произойдёт исключение. Вызов происходит асинхронно.</remarks>
        </member>
        <member name="E:xNet.Threading.MultiThreading`1.RepeatCompleted">
            <summary>
            Возникает при завершение одного из повторов выполнения асинхронной операции.
            </summary>
        </member>
        <member name="E:xNet.Threading.MultiThreading`1.WorkCompleted">
            <summary>
            Возникает при завершение работы всех потоков.
            </summary>
            <remarks>Данное событие вызывается асинхронно.</remarks>
        </member>
        <member name="E:xNet.Threading.MultiThreading`1.ProgressChanged">
            <summary>
            Возникает при вызове метода <see cref="M:xNet.Threading.MultiThreading`1.ReportProgress(`0)"/>.
            </summary>
        </member>
        <member name="E:xNet.Threading.MultiThreading`1.LogChanged">
            <summary>
            Возникает при вызове метода <see cref="M:xNet.Threading.MultiThreading`1.ReportLog(System.String,xNet.Threading.MessageType)"/>.
            </summary>
        </member>
        <member name="P:xNet.Threading.MultiThreading`1.Working">
            <summary>
            Возвращает значение, указывающие, выполняется ли асинхронная операция.
            </summary>
        </member>
        <member name="P:xNet.Threading.MultiThreading`1.Canceling">
            <summary>
            Возвращает значение, указывающие, была ли запрошена отмена выполнения асинхронной операции.
            </summary>
        </member>
        <member name="P:xNet.Threading.MultiThreading`1.EnableInfiniteRepeat">
            <summary>
            Возвращает или задаёт значение, указывающие, нужно ли бесконечно выполнять асинхронную операцию.
            </summary>
            <value>Значение по умолчанию - <see langword="false"/>.</value>
            <exception cref="T:System.InvalidOperationException">Установка значения во время выполнения асинхронной операции.</exception>
        </member>
        <member name="P:xNet.Threading.MultiThreading`1.ThreadsCount">
            <summary>
            Возвращает или задаёт число потоков используемое для выполнения асинхронной операции.
            </summary>
            <value>Значение по умолчанию - 1.</value>
            <exception cref="T:System.InvalidOperationException">Установка значения во время выполнения асинхронной операции.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра меньше 1.</exception>
        </member>
        <member name="P:xNet.Threading.MultiThreading`1.AsyncOperation">
            <summary>
            Возвращает объект для асинхронных операций.
            </summary>
        </member>
        <member name="T:xNet.Threading.MultiThreadingLoggingEventArgs">
            <summary>
            Предоставляет данные для события, используемом в целях протоколирования выполнения асинхронной операции.
            </summary>
        </member>
        <member name="M:xNet.Threading.MultiThreadingLoggingEventArgs.#ctor(System.String,xNet.Threading.MessageType)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Threading.MultiThreadingLoggingEventArgs"/> заданным сообщением.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения.</param>
        </member>
        <member name="P:xNet.Threading.MultiThreadingLoggingEventArgs.Message">
            <summary>
            Возвращает сообщение.
            </summary>
        </member>
        <member name="P:xNet.Threading.MultiThreadingLoggingEventArgs.MessageType">
            <summary>
            Возвращает тип сообщения.
            </summary>
        </member>
        <member name="T:xNet.Threading.MultiThreadingProgressEventArgs`1">
            <summary>
            Предоставляет данные для события, сообщающим о прогрессе выполнения асинхронной операции.
            </summary>
            <typeparam name="T">Тип данных передаваемого значения.</typeparam>
        </member>
        <member name="M:xNet.Threading.MultiThreadingProgressEventArgs`1.#ctor(`0)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Threading.MultiThreadingProgressEventArgs`1"/> заданным значением.
            </summary>
            <param name="result">Передаваемое значение.</param>
        </member>
        <member name="P:xNet.Threading.MultiThreadingProgressEventArgs`1.Result">
            <summary>
            Возвращает передаваемое значение.
            </summary>
        </member>
        <member name="T:xNet.Threading.MultiThreadingCompletedEventArgs">
            <summary>
            Предоставляет данные для события, сообщающего о завершение выполнения асинхронной операции.
            </summary>
        </member>
        <member name="M:xNet.Threading.MultiThreadingCompletedEventArgs.#ctor(System.Exception[])">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:xNet.Threading.MultiThreadingCompletedEventArgs"/>.
            </summary>
            <param name="exceptions">Исключения, которые произошли во время выполнения асинхронного действия и которые могли повлечь преждевременное завершение работы.</param>
        </member>
        <member name="P:xNet.Threading.MultiThreadingCompletedEventArgs.Errors">
            <summary>
            Возвращает исключения, которые произошли во время выполнения асинхронного действия и которые могли повлечь преждевременное завершение работы.
            </summary>
        </member>
        <member name="P:xNet.Threading.MultiThreadingCompletedEventArgs.HasErrors">
            <summary>
            Возвращает значение, указывающие, имеются ли исключения, которые произошли во время выполнения асинхронного действия.
            </summary>
        </member>
        <member name="T:xNet.Threading.MessageType">
            <summary>
            Тип сообщения.
            </summary>
        </member>
        <member name="F:xNet.Threading.MessageType.Good">
            <summary>
            Хорошее.
            </summary>
        </member>
        <member name="F:xNet.Threading.MessageType.Neutral">
            <summary>
            Нейтральное.
            </summary>
        </member>
        <member name="F:xNet.Threading.MessageType.Bad">
            <summary>
            Плохое.
            </summary>
        </member>
        <member name="T:xNet.Xml.XmlHelper">
            <summary>
            Представляет статический класс, предназначенный для помощи в работе с XML-документами.
            </summary>
        </member>
        <member name="M:xNet.Xml.XmlHelper.GetNodeValue(System.Xml.XmlDocument,System.String)">
            <summary>
            Возвращает значение узла, выбранного в соответствии с выражением XPath.
            </summary>
            <param name="xmlDocument">XML-документ, в котором будет вестись поиск узла.</param>
            <param name="xpath">Выражение XPath.</param>
            <returns>Найденное значение, иначе пустая строка.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xmlDocument"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xpath"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.Xml.XPath.XPathException">Неверное выражение XPath.</exception>
        </member>
        <member name="M:xNet.Xml.XmlHelper.SetNodeValue(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Устанавливает значение узла, выбранного в соответствии с выражением XPath.
            </summary>
            <param name="xmlDocument">XML-документ, в котором будет вестись поиск узла.</param>
            <param name="xpath">Выражение XPath.</param>
            <param name="value">Устанавливаемое значение.</param>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xmlDocument"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xpath"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.Xml.XPath.XPathException">Неверное выражение XPath.</exception>
        </member>
        <member name="M:xNet.Xml.XmlHelper.GetNode(System.Xml.XmlDocument,System.String)">
            <summary>
            Возвращает узел, выбранный в соответствии с выражением XPath.
            </summary>
            <param name="xmlDocument">XML-документ, в котором будет вестись поиск узла.</param>
            <param name="xpath">Выражение XPath.</param>
            <returns>Найденный узел, иначе значение <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xmlDocument"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xpath"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.Xml.XPath.XPathException">Неверное выражение XPath.</exception>
        </member>
        <member name="M:xNet.Xml.XmlHelper.GetNodes(System.Xml.XmlDocument,System.String)">
            <summary>
            Возвращает список узлов, выбранных в соответствии с выражением XPath.
            </summary>
            <param name="xmlDocument">XML-документ, в котором будет вестись поиск узлов.</param>
            <param name="xpath">Выражение XPath.</param>
            <returns>Список найденных узлов.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xmlDocument"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xpath"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.Xml.XPath.XPathException">Неверное выражение XPath.</exception>
        </member>
        <member name="M:xNet.Xml.XmlHelper.XmlToObject``1(System.String)">
            <summary>
            Конструирует объект по схеме XML-документа.
            </summary>
            <typeparam name="T">Тип конструируемого объекта. Должен иметь открытый конструктор.</typeparam>
            <param name="xml">XML-документ, по схеме которого будет сконструирован объект.</param>
            <returns>Сконструированный объект.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="xml"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Значение параметра <paramref name="xml"/> является пустой строкой.</exception>
            <exception cref="T:System.InvalidOperationException">Возникла ошибка при десериализации.</exception>
        </member>
        <member name="M:xNet.Xml.XmlHelper.ObjectToXml(System.Object)">
            <summary>
            Преобразует открытые поля и свойства объекта в XML-документ.
            </summary>
            <param name="obj">Объект, который будет преобразован в XML-документ.</param>
            <returns>Полученный XML-документ.</returns>
            <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="obj"/> равно <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Возникла ошибка при сериализации.</exception>
        </member>
    </members>
</doc>
